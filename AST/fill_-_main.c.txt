TranslationUnitDecl 0x56384f8e2b98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56384f8e3130 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56384f8e2e30 '__int128'
|-TypedefDecl 0x56384f8e31a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56384f8e2e50 'unsigned __int128'
|-TypedefDecl 0x56384f8e3478 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56384f8e3280 'struct __NSConstantString_tag'
|   `-Record 0x56384f8e31f8 '__NSConstantString_tag'
|-TypedefDecl 0x56384f8e3510 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56384f8e34d0 'char *'
|   `-BuiltinType 0x56384f8e2c30 'char'
|-TypedefDecl 0x56384f8e37d8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56384f8e3780 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56384f8e35f0 'struct __va_list_tag'
|     `-Record 0x56384f8e3568 '__va_list_tag'
|-FunctionDecl 0x56384f93c900 <fill_-_main.c:1:1, line:24:1> line:1:5 main 'int ()'
| `-CompoundStmt 0x56384f943330 <line:2:1, line:24:1>
|   |-DeclStmt 0x56384f93ca80 <line:3:3, col:12>
|   | `-VarDecl 0x56384f93ca20 <col:3, col:11> col:11 used a 'double *'
|   |-DeclStmt 0x56384f93cb10 <line:4:3, col:8>
|   | `-VarDecl 0x56384f93cab0 <col:3, col:7> col:7 used i 'int'
|   |-DeclStmt 0x56384f93cba0 <line:5:3, col:10>
|   | `-VarDecl 0x56384f93cb40 <col:3, col:7> col:7 used tid 'int'
|   |-DeclStmt 0x56384f93cc30 <line:6:3, col:15>
|   | `-VarDecl 0x56384f93cbd0 <col:3, col:7> col:7 nthreads 'int'
|   |-DeclStmt 0x56384f93ccc0 <line:7:3, col:17>
|   | `-VarDecl 0x56384f93cc60 <col:3, col:7> col:7 chunk_size 'int'
|   |-BinaryOperator 0x56384f93d368 <line:8:3, col:35> 'double *' '='
|   | |-DeclRefExpr 0x56384f93ccd8 <col:3> 'double *' lvalue Var 0x56384f93ca20 'a' 'double *'
|   | `-ImplicitCastExpr 0x56384f93d350 <col:7, col:35> 'double *' <BitCast>
|   |   `-CallExpr 0x56384f93d320 <col:7, col:35> 'void *'
|   |     |-ImplicitCastExpr 0x56384f93d308 <col:7> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56384f93d1f8 <col:7> 'void *(unsigned long)' Function 0x56384f93d0f0 'malloc' 'void *(unsigned long)'
|   |     `-BinaryOperator 0x56384f93d2b0 <col:14, col:34> 'unsigned long' '*'
|   |       |-ImplicitCastExpr 0x56384f93d298 <col:14> 'unsigned long' <IntegralCast>
|   |       | `-IntegerLiteral 0x56384f93d220 <col:14> 'int' 32
|   |       `-ParenExpr 0x56384f93d278 <col:19, col:34> 'unsigned long'
|   |         `-UnaryExprOrTypeTraitExpr 0x56384f93d258 <col:20, col:33> 'unsigned long' sizeof 'double'
|   |-OMPParallelDirective 0x56384f942dd8 <line:9:11, col:39>
|   | |-OMPPrivateClause 0x56384f93d520 <col:24, col:39>
|   | | |-DeclRefExpr 0x56384f93d390 <col:32> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   | | `-DeclRefExpr 0x56384f93d3b8 <col:35> 'int' lvalue Var 0x56384f93cb40 'tid' 'int'
|   | `-CapturedStmt 0x56384f942da0 <line:10:3, line:18:3>
|   |   |-CapturedDecl 0x56384f93d678 <<invalid sloc>> <invalid sloc>
|   |   | |-CompoundStmt 0x56384f942d80 <line:10:3, line:18:3>
|   |   | | |-BinaryOperator 0x56384f93fdb8 <line:11:5, col:30> 'int' '='
|   |   | | | |-DeclRefExpr 0x56384f93d858 <col:5> 'int' lvalue Var 0x56384f93cb40 'tid' 'int'
|   |   | | | `-CallExpr 0x56384f93fd90 <col:11, col:30> 'int'
|   |   | | |   `-ImplicitCastExpr 0x56384f93fd78 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | | |     `-DeclRefExpr 0x56384f93fd20 <col:11> 'int ()' Function 0x56384f93fc70 'omp_get_thread_num' 'int ()'
|   |   | | `-OMPForDirective 0x56384f942ca8 <line:12:13, col:20>
|   |   | |   |-CapturedStmt 0x56384f9404c8 <line:13:5, line:16:5>
|   |   | |   | |-CapturedDecl 0x56384f93fed8 <<invalid sloc>> <invalid sloc>
|   |   | |   | | |-ForStmt 0x56384f940490 <line:13:5, line:16:5>
|   |   | |   | | | |-BinaryOperator 0x56384f940088 <line:13:10, col:14> 'int' '='
|   |   | |   | | | | |-DeclRefExpr 0x56384f93ffb8 <col:10> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |   | | | | `-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |   | | | |-<<<NULL>>>
|   |   | |   | | | |-BinaryOperator 0x56384f940110 <col:17, col:21> 'int' '<'
|   |   | |   | | | | |-ImplicitCastExpr 0x56384f9400f8 <col:17> 'int' <LValueToRValue>
|   |   | |   | | | | | `-DeclRefExpr 0x56384f9400b0 <col:17> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |   | | | | `-IntegerLiteral 0x56384f9400d8 <col:21> 'int' 32
|   |   | |   | | | |-UnaryOperator 0x56384f940160 <col:25, col:26> 'int' postfix '++'
|   |   | |   | | | | `-DeclRefExpr 0x56384f940138 <col:25> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |   | | | `-CompoundStmt 0x56384f940478 <line:14:5, line:16:5>
|   |   | |   | | |   `-BinaryOperator 0x56384f940450 <line:15:7, col:14> 'double' '='
|   |   | |   | | |     |-ArraySubscriptExpr 0x56384f940348 <col:7, col:10> 'double' lvalue
|   |   | |   | | |     | |-ImplicitCastExpr 0x56384f940318 <col:7> 'double *' <LValueToRValue>
|   |   | |   | | |     | | `-DeclRefExpr 0x56384f9401a8 <col:7> 'double *' lvalue Var 0x56384f93ca20 'a' 'double *'
|   |   | |   | | |     | `-ImplicitCastExpr 0x56384f940330 <col:9> 'int' <LValueToRValue>
|   |   | |   | | |     |   `-DeclRefExpr 0x56384f9402f0 <col:9> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |   | | |     `-ImplicitCastExpr 0x56384f940438 <col:14> 'double' <IntegralToFloating>
|   |   | |   | | |       `-ImplicitCastExpr 0x56384f940420 <col:14> 'int' <LValueToRValue>
|   |   | |   | | |         `-DeclRefExpr 0x56384f940370 <col:14> 'int' lvalue Var 0x56384f93cb40 'tid' 'int'
|   |   | |   | | `-ImplicitParamDecl 0x56384f93ff58 <line:12:13> col:13 implicit __context 'struct (anonymous at fill_-_main.c:12:13) *'
|   |   | |   | |-DeclRefExpr 0x56384f940040 <line:13:10> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |   | |-DeclRefExpr 0x56384f9402c8 <line:15:7> 'double *' lvalue Var 0x56384f93ca20 'a' 'double *'
|   |   | |   | `-DeclRefExpr 0x56384f9403f8 <col:14> 'int' lvalue Var 0x56384f93cb40 'tid' 'int'
|   |   | |   |-DeclRefExpr 0x56384f940ba0 <line:13:10> 'int' lvalue Var 0x56384f940b40 '.omp.iv' 'int'
|   |   | |   |-BinaryOperator 0x56384f940770 <col:5, <invalid sloc>> 'int' '-'
|   |   | |   | |-BinaryOperator 0x56384f940648 <col:5, col:25> 'int' '/'
|   |   | |   | | |-ParenExpr 0x56384f940628 <col:5> 'int'
|   |   | |   | | | `-BinaryOperator 0x56384f940600 <col:21, col:25> 'int' '+'
|   |   | |   | | |   |-BinaryOperator 0x56384f9405d8 <col:21, <invalid sloc>> 'int' '-'
|   |   | |   | | |   | |-BinaryOperator 0x56384f940590 <col:21, col:14> 'int' '-'
|   |   | |   | | |   | | |-IntegerLiteral 0x56384f9400d8 <col:21> 'int' 32
|   |   | |   | | |   | | `-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |   | | |   | `-IntegerLiteral 0x56384f9405b8 <<invalid sloc>> 'int' 1
|   |   | |   | | |   `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   | | `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   | `-IntegerLiteral 0x56384f940750 <<invalid sloc>> 'int' 1
|   |   | |   |-<<<NULL>>>
|   |   | |   |-ImplicitCastExpr 0x56384f940578 <col:14, col:21> '_Bool' <IntegralToBoolean>
|   |   | |   | `-BinaryOperator 0x56384f940550 <col:14, col:21> 'int' '<'
|   |   | |   |   |-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |   |   `-IntegerLiteral 0x56384f9400d8 <col:21> 'int' 32
|   |   | |   |-BinaryOperator 0x56384f940c38 <col:10> 'int' '<='
|   |   | |   | |-ImplicitCastExpr 0x56384f940c08 <col:10> 'int' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x56384f940ba0 <col:10> 'int' lvalue Var 0x56384f940b40 '.omp.iv' 'int'
|   |   | |   | `-ImplicitCastExpr 0x56384f940c20 <col:10> 'int' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56384f9408d0 <col:10> 'int' lvalue Var 0x56384f940870 '.omp.ub' 'int'
|   |   | |   |-BinaryOperator 0x56384f940be0 <col:10> 'int' '='
|   |   | |   | |-DeclRefExpr 0x56384f940ba0 <col:10> 'int' lvalue Var 0x56384f940b40 '.omp.iv' 'int'
|   |   | |   | `-ImplicitCastExpr 0x56384f940bc8 <col:10> 'int' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56384f940810 <col:10> 'int' lvalue Var 0x56384f9407b0 '.omp.lb' 'int'
|   |   | |   |-BinaryOperator 0x56384f9429d0 <col:10, <invalid sloc>> 'int' '='
|   |   | |   | |-DeclRefExpr 0x56384f940ba0 <col:10> 'int' lvalue Var 0x56384f940b40 '.omp.iv' 'int'
|   |   | |   | `-BinaryOperator 0x56384f9429a8 <col:10, <invalid sloc>> 'int' '+'
|   |   | |   |   |-ImplicitCastExpr 0x56384f942990 <col:10> 'int' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 0x56384f940ba0 <col:10> 'int' lvalue Var 0x56384f940b40 '.omp.iv' 'int'
|   |   | |   |   `-IntegerLiteral 0x56384f942970 <<invalid sloc>> 'int' 1
|   |   | |   |-<<<NULL>>>
|   |   | |   |-DeclRefExpr 0x56384f940970 <col:10> 'int' lvalue Var 0x56384f940910 '.omp.is_last' 'int'
|   |   | |   |-DeclRefExpr 0x56384f940810 <col:10> 'int' lvalue Var 0x56384f9407b0 '.omp.lb' 'int'
|   |   | |   |-DeclRefExpr 0x56384f9408d0 <col:10> 'int' lvalue Var 0x56384f940870 '.omp.ub' 'int'
|   |   | |   |-DeclRefExpr 0x56384f940a30 <col:10> 'int' lvalue Var 0x56384f9409d0 '.omp.stride' 'int'
|   |   | |   |-BinaryOperator 0x56384f940b00 <col:10> 'int' '='
|   |   | |   | |-DeclRefExpr 0x56384f9408d0 <col:10> 'int' lvalue Var 0x56384f940870 '.omp.ub' 'int'
|   |   | |   | `-ConditionalOperator 0x56384f940ad0 <col:10> 'int'
|   |   | |   |   |-BinaryOperator 0x56384f940a90 <col:10, <invalid sloc>> 'int' '>'
|   |   | |   |   | |-ImplicitCastExpr 0x56384f940a78 <col:10> 'int' <LValueToRValue>
|   |   | |   |   | | `-DeclRefExpr 0x56384f9408d0 <col:10> 'int' lvalue Var 0x56384f940870 '.omp.ub' 'int'
|   |   | |   |   | `-BinaryOperator 0x56384f940770 <col:5, <invalid sloc>> 'int' '-'
|   |   | |   |   |   |-BinaryOperator 0x56384f940648 <col:5, col:25> 'int' '/'
|   |   | |   |   |   | |-ParenExpr 0x56384f940628 <col:5> 'int'
|   |   | |   |   |   | | `-BinaryOperator 0x56384f940600 <col:21, col:25> 'int' '+'
|   |   | |   |   |   | |   |-BinaryOperator 0x56384f9405d8 <col:21, <invalid sloc>> 'int' '-'
|   |   | |   |   |   | |   | |-BinaryOperator 0x56384f940590 <col:21, col:14> 'int' '-'
|   |   | |   |   |   | |   | | |-IntegerLiteral 0x56384f9400d8 <col:21> 'int' 32
|   |   | |   |   |   | |   | | `-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |   |   |   | |   | `-IntegerLiteral 0x56384f9405b8 <<invalid sloc>> 'int' 1
|   |   | |   |   |   | |   `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   |   |   | `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   |   |   `-IntegerLiteral 0x56384f940750 <<invalid sloc>> 'int' 1
|   |   | |   |   |-BinaryOperator 0x56384f940770 <col:5, <invalid sloc>> 'int' '-'
|   |   | |   |   | |-BinaryOperator 0x56384f940648 <col:5, col:25> 'int' '/'
|   |   | |   |   | | |-ParenExpr 0x56384f940628 <col:5> 'int'
|   |   | |   |   | | | `-BinaryOperator 0x56384f940600 <col:21, col:25> 'int' '+'
|   |   | |   |   | | |   |-BinaryOperator 0x56384f9405d8 <col:21, <invalid sloc>> 'int' '-'
|   |   | |   |   | | |   | |-BinaryOperator 0x56384f940590 <col:21, col:14> 'int' '-'
|   |   | |   |   | | |   | | |-IntegerLiteral 0x56384f9400d8 <col:21> 'int' 32
|   |   | |   |   | | |   | | `-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |   |   | | |   | `-IntegerLiteral 0x56384f9405b8 <<invalid sloc>> 'int' 1
|   |   | |   |   | | |   `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   |   | | `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   |   | `-IntegerLiteral 0x56384f940750 <<invalid sloc>> 'int' 1
|   |   | |   |   `-ImplicitCastExpr 0x56384f940ab8 <col:10> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x56384f9408d0 <col:10> 'int' lvalue Var 0x56384f940870 '.omp.ub' 'int'
|   |   | |   |-BinaryOperator 0x56384f942a50 <col:10> 'int' '='
|   |   | |   | |-DeclRefExpr 0x56384f940810 <col:10> 'int' lvalue Var 0x56384f9407b0 '.omp.lb' 'int'
|   |   | |   | `-BinaryOperator 0x56384f942a28 <col:10> 'int' '+'
|   |   | |   |   |-ImplicitCastExpr 0x56384f9429f8 <col:10> 'int' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 0x56384f940810 <col:10> 'int' lvalue Var 0x56384f9407b0 '.omp.lb' 'int'
|   |   | |   |   `-ImplicitCastExpr 0x56384f942a10 <col:10> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x56384f940a30 <col:10> 'int' lvalue Var 0x56384f9409d0 '.omp.stride' 'int'
|   |   | |   |-BinaryOperator 0x56384f942ad0 <col:10> 'int' '='
|   |   | |   | |-DeclRefExpr 0x56384f9408d0 <col:10> 'int' lvalue Var 0x56384f940870 '.omp.ub' 'int'
|   |   | |   | `-BinaryOperator 0x56384f942aa8 <col:10> 'int' '+'
|   |   | |   |   |-ImplicitCastExpr 0x56384f942a78 <col:10> 'int' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 0x56384f9408d0 <col:10> 'int' lvalue Var 0x56384f940870 '.omp.ub' 'int'
|   |   | |   |   `-ImplicitCastExpr 0x56384f942a90 <col:10> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x56384f940a30 <col:10> 'int' lvalue Var 0x56384f9409d0 '.omp.stride' 'int'
|   |   | |   |-BinaryOperator 0x56384f940648 <col:5, col:25> 'int' '/'
|   |   | |   | |-ParenExpr 0x56384f940628 <col:5> 'int'
|   |   | |   | | `-BinaryOperator 0x56384f940600 <col:21, col:25> 'int' '+'
|   |   | |   | |   |-BinaryOperator 0x56384f9405d8 <col:21, <invalid sloc>> 'int' '-'
|   |   | |   | |   | |-BinaryOperator 0x56384f940590 <col:21, col:14> 'int' '-'
|   |   | |   | |   | | |-IntegerLiteral 0x56384f9400d8 <col:21> 'int' 32
|   |   | |   | |   | | `-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |   | |   | `-IntegerLiteral 0x56384f9405b8 <<invalid sloc>> 'int' 1
|   |   | |   | |   `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   | `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   |-DeclRefExpr 0x56384f940670 <col:5> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |   |-DeclRefExpr 0x56384f940710 <col:5> 'int' lvalue Var 0x56384f9406b0 'i' 'int'
|   |   | |   |-BinaryOperator 0x56384f942b20 <col:5, col:14> 'int' '='
|   |   | |   | |-DeclRefExpr 0x56384f942af8 <col:5> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |   | `-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |   |-BinaryOperator 0x56384f942bd0 <col:5, col:25> 'int' '='
|   |   | |   | |-DeclRefExpr 0x56384f942af8 <col:5> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |   | `-BinaryOperator 0x56384f942ba8 <col:14, col:25> 'int' '+'
|   |   | |   |   |-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |   |   `-BinaryOperator 0x56384f942b80 <col:25> 'int' '*'
|   |   | |   |     |-ImplicitCastExpr 0x56384f942b68 <col:25> 'int' <LValueToRValue>
|   |   | |   |     | `-ParenExpr 0x56384f942b48 <col:25> 'int' lvalue
|   |   | |   |     |   `-DeclRefExpr 0x56384f940ba0 <col:10> 'int' lvalue Var 0x56384f940b40 '.omp.iv' 'int'
|   |   | |   |     `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |   `-BinaryOperator 0x56384f942c68 <col:5, col:25> 'int' '='
|   |   | |     |-DeclRefExpr 0x56384f942af8 <col:5> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   | |     `-BinaryOperator 0x56384f942c40 <col:14, col:25> 'int' '+'
|   |   | |       |-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |       `-BinaryOperator 0x56384f942c18 <col:25> 'int' '*'
|   |   | |         |-ParenExpr 0x56384f942bf8 <col:25> 'int'
|   |   | |         | `-BinaryOperator 0x56384f940648 <col:5, col:25> 'int' '/'
|   |   | |         |   |-ParenExpr 0x56384f940628 <col:5> 'int'
|   |   | |         |   | `-BinaryOperator 0x56384f940600 <col:21, col:25> 'int' '+'
|   |   | |         |   |   |-BinaryOperator 0x56384f9405d8 <col:21, <invalid sloc>> 'int' '-'
|   |   | |         |   |   | |-BinaryOperator 0x56384f940590 <col:21, col:14> 'int' '-'
|   |   | |         |   |   | | |-IntegerLiteral 0x56384f9400d8 <col:21> 'int' 32
|   |   | |         |   |   | | `-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   | |         |   |   | `-IntegerLiteral 0x56384f9405b8 <<invalid sloc>> 'int' 1
|   |   | |         |   |   `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |         |   `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |         `-IntegerLiteral 0x56384f940530 <col:25> 'int' 1
|   |   | |-ImplicitParamDecl 0x56384f93d6e0 <line:9:11> col:11 implicit .global_tid. 'int *const restrict'
|   |   | |-ImplicitParamDecl 0x56384f93d740 <col:11> col:11 implicit .bound_tid. 'int *const restrict'
|   |   | |-ImplicitParamDecl 0x56384f93d7c8 <col:11> col:11 implicit __context 'struct (anonymous at fill_-_main.c:9:11) *'
|   |   | |-FunctionDecl 0x56384f93fc70 parent 0x56384f8e2b98 <<invalid sloc>> line:11:11 implicit used omp_get_thread_num 'int ()'
|   |   | |-RecordDecl 0x56384f93fde0 <line:12:13> col:13 implicit struct definition
|   |   | | |-CapturedRecordAttr 0x56384f93fe90 <<invalid sloc>> Implicit
|   |   | | |-FieldDecl 0x56384f93fff8 <line:13:10> col:10 implicit 'int &'
|   |   | | |-FieldDecl 0x56384f940280 <line:15:7> col:7 implicit 'double *&'
|   |   | | `-FieldDecl 0x56384f9403b0 <col:14> col:14 implicit 'int &'
|   |   | `-CapturedDecl 0x56384f93fed8 <<invalid sloc>> <invalid sloc>
|   |   |   |-ForStmt 0x56384f940490 <line:13:5, line:16:5>
|   |   |   | |-BinaryOperator 0x56384f940088 <line:13:10, col:14> 'int' '='
|   |   |   | | |-DeclRefExpr 0x56384f93ffb8 <col:10> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x56384f940068 <col:14> 'int' 0
|   |   |   | |-<<<NULL>>>
|   |   |   | |-BinaryOperator 0x56384f940110 <col:17, col:21> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x56384f9400f8 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x56384f9400b0 <col:17> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x56384f9400d8 <col:21> 'int' 32
|   |   |   | |-UnaryOperator 0x56384f940160 <col:25, col:26> 'int' postfix '++'
|   |   |   | | `-DeclRefExpr 0x56384f940138 <col:25> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   |   | `-CompoundStmt 0x56384f940478 <line:14:5, line:16:5>
|   |   |   |   `-BinaryOperator 0x56384f940450 <line:15:7, col:14> 'double' '='
|   |   |   |     |-ArraySubscriptExpr 0x56384f940348 <col:7, col:10> 'double' lvalue
|   |   |   |     | |-ImplicitCastExpr 0x56384f940318 <col:7> 'double *' <LValueToRValue>
|   |   |   |     | | `-DeclRefExpr 0x56384f9401a8 <col:7> 'double *' lvalue Var 0x56384f93ca20 'a' 'double *'
|   |   |   |     | `-ImplicitCastExpr 0x56384f940330 <col:9> 'int' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x56384f9402f0 <col:9> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|   |   |   |     `-ImplicitCastExpr 0x56384f940438 <col:14> 'double' <IntegralToFloating>
|   |   |   |       `-ImplicitCastExpr 0x56384f940420 <col:14> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x56384f940370 <col:14> 'int' lvalue Var 0x56384f93cb40 'tid' 'int'
|   |   |   `-ImplicitParamDecl 0x56384f93ff58 <line:12:13> col:13 implicit __context 'struct (anonymous at fill_-_main.c:12:13) *'
|   |   `-DeclRefExpr 0x56384f940238 <line:15:7> 'double *' lvalue Var 0x56384f93ca20 'a' 'double *'
|   `-ForStmt 0x56384f9432f8 <line:19:3, line:22:3>
|     |-BinaryOperator 0x56384f942e50 <line:19:8, col:12> 'int' '='
|     | |-DeclRefExpr 0x56384f942e08 <col:8> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|     | `-IntegerLiteral 0x56384f942e30 <col:12> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x56384f942ed8 <col:15, col:19> 'int' '<'
|     | |-ImplicitCastExpr 0x56384f942ec0 <col:15> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x56384f942e78 <col:15> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|     | `-IntegerLiteral 0x56384f942ea0 <col:19> 'int' 32
|     |-UnaryOperator 0x56384f942f28 <col:23, col:24> 'int' postfix '++'
|     | `-DeclRefExpr 0x56384f942f00 <col:23> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|     `-CompoundStmt 0x56384f9432e0 <line:20:3, line:22:3>
|       `-CallExpr 0x56384f943260 <line:21:5, col:24> 'int'
|         |-ImplicitCastExpr 0x56384f943248 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56384f9430e8 <col:5> 'int (const char *, ...)' Function 0x56384f942f88 'printf' 'int (const char *, ...)'
|         |-ImplicitCastExpr 0x56384f9432b0 <col:12> 'const char *' <BitCast>
|         | `-ImplicitCastExpr 0x56384f943298 <col:12> 'char *' <ArrayToPointerDecay>
|         |   `-StringLiteral 0x56384f943148 <col:12> 'char [4]' lvalue "%f\n"
|         `-ImplicitCastExpr 0x56384f9432c8 <col:20, col:23> 'double' <LValueToRValue>
|           `-ArraySubscriptExpr 0x56384f9431f8 <col:20, col:23> 'double' lvalue
|             |-ImplicitCastExpr 0x56384f9431c8 <col:20> 'double *' <LValueToRValue>
|             | `-DeclRefExpr 0x56384f943178 <col:20> 'double *' lvalue Var 0x56384f93ca20 'a' 'double *'
|             `-ImplicitCastExpr 0x56384f9431e0 <col:22> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56384f9431a0 <col:22> 'int' lvalue Var 0x56384f93cab0 'i' 'int'
|-FunctionDecl 0x56384f93d0f0 <line:8:7> col:7 implicit used malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x56384f93d190 <<invalid sloc>> <invalid sloc> 'unsigned long'
`-FunctionDecl 0x56384f942f88 <line:21:5> col:5 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x56384f943028 <<invalid sloc>> <invalid sloc> 'const char *'
  `-FormatAttr 0x56384f943090 <col:5> Implicit printf 1 2
