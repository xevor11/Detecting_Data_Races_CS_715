TranslationUnitDecl 0x5642e7594e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5642e75953b0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5642e75950b0 '__int128'
|-TypedefDecl 0x5642e7595420 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5642e75950d0 'unsigned __int128'
|-TypedefDecl 0x5642e75956f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5642e7595500 'struct __NSConstantString_tag'
|   `-Record 0x5642e7595478 '__NSConstantString_tag'
|-TypedefDecl 0x5642e7595790 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5642e7595750 'char *'
|   `-BuiltinType 0x5642e7594eb0 'char'
|-TypedefDecl 0x5642e7595a58 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5642e7595a00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5642e7595870 'struct __va_list_tag'
|     `-Record 0x5642e75957e8 '__va_list_tag'
|-VarDecl 0x5642e75eee30 <lab2_openmp_-_main.c:1:1, col:15> col:5 used array_a 'int [10]'
|-VarDecl 0x5642e75eef18 <line:2:1, col:15> col:5 used array_b 'int [10]'
|-VarDecl 0x5642e75eefc0 <line:3:1, col:15> col:5 used array_c 'int [10]'
|-VarDecl 0x5642e75ef038 <line:4:1, col:5> col:5 used smallest_value 'int'
|-VarDecl 0x5642e75ef0b0 <line:5:1, col:5> col:5 used largest_value 'int'
|-VarDecl 0x5642e75ef128 <line:6:1, col:5> col:5 used average_value 'int'
|-FunctionDecl 0x5642e75ef1e0 <line:7:1, line:60:1> line:7:5 main 'int ()'
| `-CompoundStmt 0x5642e75f7ab0 <line:8:1, line:60:1>
|   |-BinaryOperator 0x5642e75ef2c8 <line:9:3, col:20> 'int' '='
|   | |-DeclRefExpr 0x5642e75ef280 <col:3> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   | `-IntegerLiteral 0x5642e75ef2a8 <col:20> 'int' 10
|   |-BinaryOperator 0x5642e75ef358 <line:10:3, col:20> 'int' '='
|   | |-DeclRefExpr 0x5642e75ef2f0 <col:3> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   | `-UnaryOperator 0x5642e75ef338 <col:19, col:20> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5642e75ef318 <col:20> 'int' 1
|   |-BinaryOperator 0x5642e75ef3c8 <line:11:3, col:19> 'int' '='
|   | |-DeclRefExpr 0x5642e75ef380 <col:3> 'int' lvalue Var 0x5642e75ef128 'average_value' 'int'
|   | `-IntegerLiteral 0x5642e75ef3a8 <col:19> 'int' 0
|   |-CallExpr 0x5642e75ef6e0 <line:12:3, col:20> 'int'
|   | |-ImplicitCastExpr 0x5642e75ef6c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75ef4c8 <col:3> 'int ()' Function 0x5642e75ef418 'srand' 'int ()'
|   | `-BinaryOperator 0x5642e75ef6a0 <col:9, col:19> 'int' '+'
|   |   |-CallExpr 0x5642e75ef650 <col:9, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x5642e75ef638 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x5642e75ef5c8 <col:9> 'int ()' Function 0x5642e75ef518 'time' 'int ()'
|   |   | `-IntegerLiteral 0x5642e75ef5f0 <col:14> 'int' 0
|   |   `-IntegerLiteral 0x5642e75ef680 <col:19> 'int' 1
|   |-DeclStmt 0x5642e75ef788 <line:13:3, col:8>
|   | `-VarDecl 0x5642e75ef728 <col:3, col:7> col:7 used i 'int'
|   |-DeclStmt 0x5642e75ef818 <line:14:3, col:10>
|   | `-VarDecl 0x5642e75ef7b8 <col:3, col:7> col:7 used tid 'int'
|   |-DeclStmt 0x5642e75ef8a8 <line:15:3, col:15>
|   | `-VarDecl 0x5642e75ef848 <col:3, col:7> col:7 used nthreads 'int'
|   |-CallExpr 0x5642e75ef9f8 <line:16:3, col:24> 'int'
|   | |-ImplicitCastExpr 0x5642e75ef9e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75ef998 <col:3> 'int ()' Function 0x5642e75ef8e8 'omp_set_num_threads' 'int ()'
|   | `-IntegerLiteral 0x5642e75ef9c0 <col:23> 'int' 4
|   |-OMPParallelDirective 0x5642e75f73a8 <line:17:11, col:102>
|   | |-OMPSharedClause 0x5642e75efaa0 <col:24, col:77>
|   | | |-DeclRefExpr 0x5642e75efa28 <col:31> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   | | |-DeclRefExpr 0x5642e75efa50 <col:47> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   | | `-DeclRefExpr 0x5642e75efa78 <col:62> 'int' lvalue Var 0x5642e75ef128 'average_value' 'int'
|   | |-OMPPrivateClause 0x5642e75efd28 <col:77, col:102>
|   | | |-DeclRefExpr 0x5642e75efad0 <col:85> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   | | |-DeclRefExpr 0x5642e75efaf8 <col:88> 'int' lvalue Var 0x5642e75ef7b8 'tid' 'int'
|   | | `-DeclRefExpr 0x5642e75efb20 <col:93> 'int' lvalue Var 0x5642e75ef848 'nthreads' 'int'
|   | `-CapturedStmt 0x5642e75f7388 <line:18:3, line:53:3>
|   |   `-CapturedDecl 0x5642e75f0878 <<invalid sloc>> <invalid sloc>
|   |     |-CompoundStmt 0x5642e75f7370 <line:18:3, line:53:3>
|   |     | `-OMPForDirective 0x5642e75f7290 <line:19:13, col:38>
|   |     |   |-OMPScheduleClause 0x5642e75f0a28 <col:21, col:37>
|   |     |   | `-<<<NULL>>>
|   |     |   |-CapturedStmt 0x5642e75f5f20 <line:20:5, line:51:5>
|   |     |   | |-CapturedDecl 0x5642e75f0b68 <<invalid sloc>> <invalid sloc>
|   |     |   | | |-ForStmt 0x5642e75f5ee8 <line:20:5, line:51:5>
|   |     |   | | | |-BinaryOperator 0x5642e75f0d48 <line:20:10, col:14> 'int' '='
|   |     |   | | | | |-DeclRefExpr 0x5642e75f0c78 <col:10> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | | | `-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |   | | | |-<<<NULL>>>
|   |     |   | | | |-BinaryOperator 0x5642e75f0dd0 <col:17, col:21> 'int' '<'
|   |     |   | | | | |-ImplicitCastExpr 0x5642e75f0db8 <col:17> 'int' <LValueToRValue>
|   |     |   | | | | | `-DeclRefExpr 0x5642e75f0d70 <col:17> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | | | `-IntegerLiteral 0x5642e75f0d98 <col:21> 'int' 10
|   |     |   | | | |-UnaryOperator 0x5642e75f0e20 <col:25, col:26> 'int' postfix '++'
|   |     |   | | | | `-DeclRefExpr 0x5642e75f0df8 <col:25> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | | `-CompoundStmt 0x5642e75f5ea0 <line:21:5, line:51:5>
|   |     |   | | |   |-BinaryOperator 0x5642e75f1030 <line:22:7, col:32> 'int' '='
|   |     |   | | |   | |-DeclRefExpr 0x5642e75f0e40 <col:7> 'int' lvalue Var 0x5642e75ef7b8 'tid' 'int'
|   |     |   | | |   | `-CallExpr 0x5642e75f1008 <col:13, col:32> 'int'
|   |     |   | | |   |   `-ImplicitCastExpr 0x5642e75f0ff0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | | |   |     `-DeclRefExpr 0x5642e75f0fc8 <col:13> 'int ()' Function 0x5642e75f0f18 'omp_get_thread_num' 'int ()'
|   |     |   | | |   |-IfStmt 0x5642e75f1780 <line:23:7, line:24:38>
|   |     |   | | |   | |-<<<NULL>>>
|   |     |   | | |   | |-<<<NULL>>>
|   |     |   | | |   | |-UnaryOperator 0x5642e75f1078 <line:23:11, col:12> 'int' prefix '!'
|   |     |   | | |   | | `-IntegerLiteral 0x5642e75f1058 <col:12> 'int' 1
|   |     |   | | |   | |-CallExpr 0x5642e75f1700 <line:24:9, col:38> 'int'
|   |     |   | | |   | | |-ImplicitCastExpr 0x5642e75f16e8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     |   | | |   | | | `-DeclRefExpr 0x5642e75f15f0 <col:9> 'int (const char *, ...)' Function 0x5642e75f1490 'printf' 'int (const char *, ...)'
|   |     |   | | |   | | |-ImplicitCastExpr 0x5642e75f1750 <col:16> 'const char *' <BitCast>
|   |     |   | | |   | | | `-ImplicitCastExpr 0x5642e75f1738 <col:16> 'char *' <ArrayToPointerDecay>
|   |     |   | | |   | | |   `-StringLiteral 0x5642e75f1658 <col:16> 'char [15]' lvalue "Thread ID: %d\n"
|   |     |   | | |   | | `-ImplicitCastExpr 0x5642e75f1768 <col:35> 'int' <LValueToRValue>
|   |     |   | | |   | |   `-DeclRefExpr 0x5642e75f1690 <col:35> 'int' lvalue Var 0x5642e75ef7b8 'tid' 'int'
|   |     |   | | |   | `-<<<NULL>>>
|   |     |   | | |   |-IfStmt 0x5642e75f40c0 <line:26:7, line:32:7>
|   |     |   | | |   | |-<<<NULL>>>
|   |     |   | | |   | |-<<<NULL>>>
|   |     |   | | |   | |-BinaryOperator 0x5642e75f3c88 <line:26:11, col:18> 'int' '=='
|   |     |   | | |   | | |-ImplicitCastExpr 0x5642e75f3c70 <col:11> 'int' <LValueToRValue>
|   |     |   | | |   | | | `-DeclRefExpr 0x5642e75f17b8 <col:11> 'int' lvalue Var 0x5642e75ef7b8 'tid' 'int'
|   |     |   | | |   | | `-IntegerLiteral 0x5642e75f17e0 <col:18> 'int' 0
|   |     |   | | |   | |-CompoundStmt 0x5642e75f40a0 <line:27:7, line:32:7>
|   |     |   | | |   | | |-BinaryOperator 0x5642e75f3ea0 <line:28:9, col:40> 'int' '='
|   |     |   | | |   | | | |-DeclRefExpr 0x5642e75f3cb0 <col:9> 'int' lvalue Var 0x5642e75ef848 'nthreads' 'int'
|   |     |   | | |   | | | `-CallExpr 0x5642e75f3e78 <col:20, col:40> 'int'
|   |     |   | | |   | | |   `-ImplicitCastExpr 0x5642e75f3e60 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | | |   | | |     `-DeclRefExpr 0x5642e75f3e38 <col:20> 'int ()' Function 0x5642e75f3d88 'omp_get_num_threads' 'int ()'
|   |     |   | | |   | | `-IfStmt 0x5642e75f4068 <line:29:9, line:30:54>
|   |     |   | | |   | |   |-<<<NULL>>>
|   |     |   | | |   | |   |-<<<NULL>>>
|   |     |   | | |   | |   |-UnaryOperator 0x5642e75f3ee8 <line:29:13, col:14> 'int' prefix '!'
|   |     |   | | |   | |   | `-IntegerLiteral 0x5642e75f3ec8 <col:14> 'int' 1
|   |     |   | | |   | |   |-CallExpr 0x5642e75f3fe8 <line:30:11, col:54> 'int'
|   |     |   | | |   | |   | |-ImplicitCastExpr 0x5642e75f3fd0 <col:11> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     |   | | |   | |   | | `-DeclRefExpr 0x5642e75f3f08 <col:11> 'int (const char *, ...)' Function 0x5642e75f1490 'printf' 'int (const char *, ...)'
|   |     |   | | |   | |   | |-ImplicitCastExpr 0x5642e75f4038 <col:18> 'const char *' <BitCast>
|   |     |   | | |   | |   | | `-ImplicitCastExpr 0x5642e75f4020 <col:18> 'char *' <ArrayToPointerDecay>
|   |     |   | | |   | |   | |   `-StringLiteral 0x5642e75f3f68 <col:18> 'char [24]' lvalue "Number of threads = %d\n"
|   |     |   | | |   | |   | `-ImplicitCastExpr 0x5642e75f4050 <col:46> 'int' <LValueToRValue>
|   |     |   | | |   | |   |   `-DeclRefExpr 0x5642e75f3fa8 <col:46> 'int' lvalue Var 0x5642e75ef848 'nthreads' 'int'
|   |     |   | | |   | |   `-<<<NULL>>>
|   |     |   | | |   | `-<<<NULL>>>
|   |     |   | | |   |-BinaryOperator 0x5642e75f4328 <line:34:7, col:29> 'int' '='
|   |     |   | | |   | |-ArraySubscriptExpr 0x5642e75f4178 <col:7, col:16> 'int' lvalue
|   |     |   | | |   | | |-ImplicitCastExpr 0x5642e75f4148 <col:7> 'int *' <ArrayToPointerDecay>
|   |     |   | | |   | | | `-DeclRefExpr 0x5642e75f40f8 <col:7> 'int [10]' lvalue Var 0x5642e75eee30 'array_a' 'int [10]'
|   |     |   | | |   | | `-ImplicitCastExpr 0x5642e75f4160 <col:15> 'int' <LValueToRValue>
|   |     |   | | |   | |   `-DeclRefExpr 0x5642e75f4120 <col:15> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |   | `-BinaryOperator 0x5642e75f4300 <col:20, col:29> 'int' '%'
|   |     |   | | |   |   |-CallExpr 0x5642e75f42b8 <col:20, col:25> 'int'
|   |     |   | | |   |   | `-ImplicitCastExpr 0x5642e75f42a0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | | |   |   |   `-DeclRefExpr 0x5642e75f4278 <col:20> 'int ()' Function 0x5642e75f41c8 'rand' 'int ()'
|   |     |   | | |   |   `-IntegerLiteral 0x5642e75f42e0 <col:29> 'int' 10
|   |     |   | | |   |-BinaryOperator 0x5642e75f44a8 <line:35:7, col:29> 'int' '='
|   |     |   | | |   | |-ArraySubscriptExpr 0x5642e75f43d0 <col:7, col:16> 'int' lvalue
|   |     |   | | |   | | |-ImplicitCastExpr 0x5642e75f43a0 <col:7> 'int *' <ArrayToPointerDecay>
|   |     |   | | |   | | | `-DeclRefExpr 0x5642e75f4350 <col:7> 'int [10]' lvalue Var 0x5642e75eef18 'array_b' 'int [10]'
|   |     |   | | |   | | `-ImplicitCastExpr 0x5642e75f43b8 <col:15> 'int' <LValueToRValue>
|   |     |   | | |   | |   `-DeclRefExpr 0x5642e75f4378 <col:15> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |   | `-BinaryOperator 0x5642e75f4480 <col:20, col:29> 'int' '%'
|   |     |   | | |   |   |-CallExpr 0x5642e75f4438 <col:20, col:25> 'int'
|   |     |   | | |   |   | `-ImplicitCastExpr 0x5642e75f4420 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | | |   |   |   `-DeclRefExpr 0x5642e75f43f8 <col:20> 'int ()' Function 0x5642e75f41c8 'rand' 'int ()'
|   |     |   | | |   |   `-IntegerLiteral 0x5642e75f4460 <col:29> 'int' 10
|   |     |   | | |   |-BinaryOperator 0x5642e75f4788 <line:36:7, col:48> 'int' '='
|   |     |   | | |   | |-ArraySubscriptExpr 0x5642e75f4550 <col:7, col:16> 'int' lvalue
|   |     |   | | |   | | |-ImplicitCastExpr 0x5642e75f4520 <col:7> 'int *' <ArrayToPointerDecay>
|   |     |   | | |   | | | `-DeclRefExpr 0x5642e75f44d0 <col:7> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | | |   | | `-ImplicitCastExpr 0x5642e75f4538 <col:15> 'int' <LValueToRValue>
|   |     |   | | |   | |   `-DeclRefExpr 0x5642e75f44f8 <col:15> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |   | `-BinaryOperator 0x5642e75f4760 <col:20, col:48> 'int' '/'
|   |     |   | | |   |   |-ParenExpr 0x5642e75f4720 <col:20, col:44> 'int'
|   |     |   | | |   |   | `-BinaryOperator 0x5642e75f46f8 <col:21, col:43> 'int' '+'
|   |     |   | | |   |   |   |-ImplicitCastExpr 0x5642e75f46c8 <col:21, col:30> 'int' <LValueToRValue>
|   |     |   | | |   |   |   | `-ArraySubscriptExpr 0x5642e75f45f8 <col:21, col:30> 'int' lvalue
|   |     |   | | |   |   |   |   |-ImplicitCastExpr 0x5642e75f45c8 <col:21> 'int *' <ArrayToPointerDecay>
|   |     |   | | |   |   |   |   | `-DeclRefExpr 0x5642e75f4578 <col:21> 'int [10]' lvalue Var 0x5642e75eee30 'array_a' 'int [10]'
|   |     |   | | |   |   |   |   `-ImplicitCastExpr 0x5642e75f45e0 <col:29> 'int' <LValueToRValue>
|   |     |   | | |   |   |   |     `-DeclRefExpr 0x5642e75f45a0 <col:29> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |   |   |   `-ImplicitCastExpr 0x5642e75f46e0 <col:34, col:43> 'int' <LValueToRValue>
|   |     |   | | |   |   |     `-ArraySubscriptExpr 0x5642e75f46a0 <col:34, col:43> 'int' lvalue
|   |     |   | | |   |   |       |-ImplicitCastExpr 0x5642e75f4670 <col:34> 'int *' <ArrayToPointerDecay>
|   |     |   | | |   |   |       | `-DeclRefExpr 0x5642e75f4620 <col:34> 'int [10]' lvalue Var 0x5642e75eef18 'array_b' 'int [10]'
|   |     |   | | |   |   |       `-ImplicitCastExpr 0x5642e75f4688 <col:42> 'int' <LValueToRValue>
|   |     |   | | |   |   |         `-DeclRefExpr 0x5642e75f4648 <col:42> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |   |   `-IntegerLiteral 0x5642e75f4740 <col:48> 'int' 2
|   |     |   | | |   `-OMPCriticalDirective 0x5642e75f5e60 <line:37:15, col:27>
|   |     |   | | |     `-CapturedStmt 0x5642e75f5e28 <line:38:7, line:50:7>
|   |     |   | | |       |-CapturedDecl 0x5642e75f48a8 <<invalid sloc>> <invalid sloc>
|   |     |   | | |       | |-CompoundStmt 0x5642e75f5e00 <line:38:7, line:50:7>
|   |     |   | | |       | | |-IfStmt 0x5642e75f5a20 <line:39:9, line:42:9>
|   |     |   | | |       | | | |-<<<NULL>>>
|   |     |   | | |       | | | |-<<<NULL>>>
|   |     |   | | |       | | | |-BinaryOperator 0x5642e75f4b10 <line:39:13, col:26> 'int' '<'
|   |     |   | | |       | | | | |-ImplicitCastExpr 0x5642e75f4ae0 <col:13, col:22> 'int' <LValueToRValue>
|   |     |   | | |       | | | | | `-ArraySubscriptExpr 0x5642e75f4a90 <col:13, col:22> 'int' lvalue
|   |     |   | | |       | | | | |   |-ImplicitCastExpr 0x5642e75f4a60 <col:13> 'int *' <ArrayToPointerDecay>
|   |     |   | | |       | | | | |   | `-DeclRefExpr 0x5642e75f4988 <col:13> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | | |       | | | | |   `-ImplicitCastExpr 0x5642e75f4a78 <col:21> 'int' <LValueToRValue>
|   |     |   | | |       | | | | |     `-DeclRefExpr 0x5642e75f49b0 <col:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |       | | | | `-ImplicitCastExpr 0x5642e75f4af8 <col:26> 'int' <LValueToRValue>
|   |     |   | | |       | | | |   `-DeclRefExpr 0x5642e75f4ab8 <col:26> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   |     |   | | |       | | | |-CompoundStmt 0x5642e75f4c48 <line:40:9, line:42:9>
|   |     |   | | |       | | | | `-BinaryOperator 0x5642e75f4c20 <line:41:11, col:37> 'int' '='
|   |     |   | | |       | | | |   |-DeclRefExpr 0x5642e75f4b38 <col:11> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   |     |   | | |       | | | |   `-ImplicitCastExpr 0x5642e75f4c08 <col:28, col:37> 'int' <LValueToRValue>
|   |     |   | | |       | | | |     `-ArraySubscriptExpr 0x5642e75f4be0 <col:28, col:37> 'int' lvalue
|   |     |   | | |       | | | |       |-ImplicitCastExpr 0x5642e75f4bb0 <col:28> 'int *' <ArrayToPointerDecay>
|   |     |   | | |       | | | |       | `-DeclRefExpr 0x5642e75f4b60 <col:28> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | | |       | | | |       `-ImplicitCastExpr 0x5642e75f4bc8 <col:36> 'int' <LValueToRValue>
|   |     |   | | |       | | | |         `-DeclRefExpr 0x5642e75f4b88 <col:36> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |       | | | `-<<<NULL>>>
|   |     |   | | |       | | |-IfStmt 0x5642e75f5ca8 <line:44:9, line:47:9>
|   |     |   | | |       | | | |-<<<NULL>>>
|   |     |   | | |       | | | |-<<<NULL>>>
|   |     |   | | |       | | | |-BinaryOperator 0x5642e75f5b58 <line:44:13, col:26> 'int' '>'
|   |     |   | | |       | | | | |-ImplicitCastExpr 0x5642e75f5b28 <col:13, col:22> 'int' <LValueToRValue>
|   |     |   | | |       | | | | | `-ArraySubscriptExpr 0x5642e75f5ad8 <col:13, col:22> 'int' lvalue
|   |     |   | | |       | | | | |   |-ImplicitCastExpr 0x5642e75f5aa8 <col:13> 'int *' <ArrayToPointerDecay>
|   |     |   | | |       | | | | |   | `-DeclRefExpr 0x5642e75f5a58 <col:13> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | | |       | | | | |   `-ImplicitCastExpr 0x5642e75f5ac0 <col:21> 'int' <LValueToRValue>
|   |     |   | | |       | | | | |     `-DeclRefExpr 0x5642e75f5a80 <col:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |       | | | | `-ImplicitCastExpr 0x5642e75f5b40 <col:26> 'int' <LValueToRValue>
|   |     |   | | |       | | | |   `-DeclRefExpr 0x5642e75f5b00 <col:26> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   |     |   | | |       | | | |-CompoundStmt 0x5642e75f5c90 <line:45:9, line:47:9>
|   |     |   | | |       | | | | `-BinaryOperator 0x5642e75f5c68 <line:46:11, col:36> 'int' '='
|   |     |   | | |       | | | |   |-DeclRefExpr 0x5642e75f5b80 <col:11> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   |     |   | | |       | | | |   `-ImplicitCastExpr 0x5642e75f5c50 <col:27, col:36> 'int' <LValueToRValue>
|   |     |   | | |       | | | |     `-ArraySubscriptExpr 0x5642e75f5c28 <col:27, col:36> 'int' lvalue
|   |     |   | | |       | | | |       |-ImplicitCastExpr 0x5642e75f5bf8 <col:27> 'int *' <ArrayToPointerDecay>
|   |     |   | | |       | | | |       | `-DeclRefExpr 0x5642e75f5ba8 <col:27> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | | |       | | | |       `-ImplicitCastExpr 0x5642e75f5c10 <col:35> 'int' <LValueToRValue>
|   |     |   | | |       | | | |         `-DeclRefExpr 0x5642e75f5bd0 <col:35> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |       | | | `-<<<NULL>>>
|   |     |   | | |       | | `-CompoundAssignOperator 0x5642e75f5dc8 <line:49:9, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   | | |       | |   |-DeclRefExpr 0x5642e75f5ce0 <col:9> 'int' lvalue Var 0x5642e75ef128 'average_value' 'int'
|   |     |   | | |       | |   `-ImplicitCastExpr 0x5642e75f5db0 <col:26, col:35> 'int' <LValueToRValue>
|   |     |   | | |       | |     `-ArraySubscriptExpr 0x5642e75f5d88 <col:26, col:35> 'int' lvalue
|   |     |   | | |       | |       |-ImplicitCastExpr 0x5642e75f5d58 <col:26> 'int *' <ArrayToPointerDecay>
|   |     |   | | |       | |       | `-DeclRefExpr 0x5642e75f5d08 <col:26> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | | |       | |       `-ImplicitCastExpr 0x5642e75f5d70 <col:34> 'int' <LValueToRValue>
|   |     |   | | |       | |         `-DeclRefExpr 0x5642e75f5d30 <col:34> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |       | `-ImplicitParamDecl 0x5642e75f4928 <line:37:15> col:15 implicit __context 'struct (anonymous at lab2_openmp_-_main.c:37:15) *'
|   |     |   | | |       `-DeclRefExpr 0x5642e75f4a38 <line:39:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | | |-ImplicitParamDecl 0x5642e75f0be8 <line:19:13> col:13 implicit __context 'struct (anonymous at lab2_openmp_-_main.c:19:13) *'
|   |     |   | | |-FunctionDecl 0x5642e75f0f18 parent 0x5642e7594e18 <<invalid sloc>> line:22:13 implicit used omp_get_thread_num 'int ()'
|   |     |   | | |-FunctionDecl 0x5642e75f3d88 parent 0x5642e7594e18 <<invalid sloc>> line:28:20 implicit used omp_get_num_threads 'int ()'
|   |     |   | | |-FunctionDecl 0x5642e75f41c8 parent 0x5642e7594e18 <<invalid sloc>> line:34:20 implicit used rand 'int ()'
|   |     |   | | |-RecordDecl 0x5642e75f47b0 <line:37:15> col:15 implicit struct definition
|   |     |   | | | |-CapturedRecordAttr 0x5642e75f4860 <<invalid sloc>> Implicit
|   |     |   | | | `-FieldDecl 0x5642e75f49f0 <line:39:21> col:21 implicit 'int &'
|   |     |   | | `-CapturedDecl 0x5642e75f48a8 <<invalid sloc>> <invalid sloc>
|   |     |   | |   |-CompoundStmt 0x5642e75f5e00 <line:38:7, line:50:7>
|   |     |   | |   | |-IfStmt 0x5642e75f5a20 <line:39:9, line:42:9>
|   |     |   | |   | | |-<<<NULL>>>
|   |     |   | |   | | |-<<<NULL>>>
|   |     |   | |   | | |-BinaryOperator 0x5642e75f4b10 <line:39:13, col:26> 'int' '<'
|   |     |   | |   | | | |-ImplicitCastExpr 0x5642e75f4ae0 <col:13, col:22> 'int' <LValueToRValue>
|   |     |   | |   | | | | `-ArraySubscriptExpr 0x5642e75f4a90 <col:13, col:22> 'int' lvalue
|   |     |   | |   | | | |   |-ImplicitCastExpr 0x5642e75f4a60 <col:13> 'int *' <ArrayToPointerDecay>
|   |     |   | |   | | | |   | `-DeclRefExpr 0x5642e75f4988 <col:13> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | |   | | | |   `-ImplicitCastExpr 0x5642e75f4a78 <col:21> 'int' <LValueToRValue>
|   |     |   | |   | | | |     `-DeclRefExpr 0x5642e75f49b0 <col:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | |   | | | `-ImplicitCastExpr 0x5642e75f4af8 <col:26> 'int' <LValueToRValue>
|   |     |   | |   | | |   `-DeclRefExpr 0x5642e75f4ab8 <col:26> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   |     |   | |   | | |-CompoundStmt 0x5642e75f4c48 <line:40:9, line:42:9>
|   |     |   | |   | | | `-BinaryOperator 0x5642e75f4c20 <line:41:11, col:37> 'int' '='
|   |     |   | |   | | |   |-DeclRefExpr 0x5642e75f4b38 <col:11> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   |     |   | |   | | |   `-ImplicitCastExpr 0x5642e75f4c08 <col:28, col:37> 'int' <LValueToRValue>
|   |     |   | |   | | |     `-ArraySubscriptExpr 0x5642e75f4be0 <col:28, col:37> 'int' lvalue
|   |     |   | |   | | |       |-ImplicitCastExpr 0x5642e75f4bb0 <col:28> 'int *' <ArrayToPointerDecay>
|   |     |   | |   | | |       | `-DeclRefExpr 0x5642e75f4b60 <col:28> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | |   | | |       `-ImplicitCastExpr 0x5642e75f4bc8 <col:36> 'int' <LValueToRValue>
|   |     |   | |   | | |         `-DeclRefExpr 0x5642e75f4b88 <col:36> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | |   | | `-<<<NULL>>>
|   |     |   | |   | |-IfStmt 0x5642e75f5ca8 <line:44:9, line:47:9>
|   |     |   | |   | | |-<<<NULL>>>
|   |     |   | |   | | |-<<<NULL>>>
|   |     |   | |   | | |-BinaryOperator 0x5642e75f5b58 <line:44:13, col:26> 'int' '>'
|   |     |   | |   | | | |-ImplicitCastExpr 0x5642e75f5b28 <col:13, col:22> 'int' <LValueToRValue>
|   |     |   | |   | | | | `-ArraySubscriptExpr 0x5642e75f5ad8 <col:13, col:22> 'int' lvalue
|   |     |   | |   | | | |   |-ImplicitCastExpr 0x5642e75f5aa8 <col:13> 'int *' <ArrayToPointerDecay>
|   |     |   | |   | | | |   | `-DeclRefExpr 0x5642e75f5a58 <col:13> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | |   | | | |   `-ImplicitCastExpr 0x5642e75f5ac0 <col:21> 'int' <LValueToRValue>
|   |     |   | |   | | | |     `-DeclRefExpr 0x5642e75f5a80 <col:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | |   | | | `-ImplicitCastExpr 0x5642e75f5b40 <col:26> 'int' <LValueToRValue>
|   |     |   | |   | | |   `-DeclRefExpr 0x5642e75f5b00 <col:26> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   |     |   | |   | | |-CompoundStmt 0x5642e75f5c90 <line:45:9, line:47:9>
|   |     |   | |   | | | `-BinaryOperator 0x5642e75f5c68 <line:46:11, col:36> 'int' '='
|   |     |   | |   | | |   |-DeclRefExpr 0x5642e75f5b80 <col:11> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   |     |   | |   | | |   `-ImplicitCastExpr 0x5642e75f5c50 <col:27, col:36> 'int' <LValueToRValue>
|   |     |   | |   | | |     `-ArraySubscriptExpr 0x5642e75f5c28 <col:27, col:36> 'int' lvalue
|   |     |   | |   | | |       |-ImplicitCastExpr 0x5642e75f5bf8 <col:27> 'int *' <ArrayToPointerDecay>
|   |     |   | |   | | |       | `-DeclRefExpr 0x5642e75f5ba8 <col:27> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | |   | | |       `-ImplicitCastExpr 0x5642e75f5c10 <col:35> 'int' <LValueToRValue>
|   |     |   | |   | | |         `-DeclRefExpr 0x5642e75f5bd0 <col:35> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | |   | | `-<<<NULL>>>
|   |     |   | |   | `-CompoundAssignOperator 0x5642e75f5dc8 <line:49:9, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   | |   |   |-DeclRefExpr 0x5642e75f5ce0 <col:9> 'int' lvalue Var 0x5642e75ef128 'average_value' 'int'
|   |     |   | |   |   `-ImplicitCastExpr 0x5642e75f5db0 <col:26, col:35> 'int' <LValueToRValue>
|   |     |   | |   |     `-ArraySubscriptExpr 0x5642e75f5d88 <col:26, col:35> 'int' lvalue
|   |     |   | |   |       |-ImplicitCastExpr 0x5642e75f5d58 <col:26> 'int *' <ArrayToPointerDecay>
|   |     |   | |   |       | `-DeclRefExpr 0x5642e75f5d08 <col:26> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |     |   | |   |       `-ImplicitCastExpr 0x5642e75f5d70 <col:34> 'int' <LValueToRValue>
|   |     |   | |   |         `-DeclRefExpr 0x5642e75f5d30 <col:34> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | |   `-ImplicitParamDecl 0x5642e75f4928 <line:37:15> col:15 implicit __context 'struct (anonymous at lab2_openmp_-_main.c:37:15) *'
|   |     |   | |-DeclRefExpr 0x5642e75f0d00 <line:20:10> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | |-DeclRefExpr 0x5642e75f0ec8 <line:22:7> 'int' lvalue Var 0x5642e75ef7b8 'tid' 'int'
|   |     |   | `-DeclRefExpr 0x5642e75f3d38 <line:28:9> 'int' lvalue Var 0x5642e75ef848 'nthreads' 'int'
|   |     |   |-DeclRefExpr 0x5642e75f65f8 <line:20:10> 'int' lvalue Var 0x5642e75f6598 '.omp.iv' 'int'
|   |     |   |-BinaryOperator 0x5642e75f61c8 <col:5, <invalid sloc>> 'int' '-'
|   |     |   | |-BinaryOperator 0x5642e75f60a0 <col:5, col:25> 'int' '/'
|   |     |   | | |-ParenExpr 0x5642e75f6080 <col:5> 'int'
|   |     |   | | | `-BinaryOperator 0x5642e75f6058 <col:21, col:25> 'int' '+'
|   |     |   | | |   |-BinaryOperator 0x5642e75f6030 <col:21, <invalid sloc>> 'int' '-'
|   |     |   | | |   | |-BinaryOperator 0x5642e75f5fe8 <col:21, col:14> 'int' '-'
|   |     |   | | |   | | |-IntegerLiteral 0x5642e75f0d98 <col:21> 'int' 10
|   |     |   | | |   | | `-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |   | | |   | `-IntegerLiteral 0x5642e75f6010 <<invalid sloc>> 'int' 1
|   |     |   | | |   `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   | | `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   | `-IntegerLiteral 0x5642e75f61a8 <<invalid sloc>> 'int' 1
|   |     |   |-<<<NULL>>>
|   |     |   |-ImplicitCastExpr 0x5642e75f5fd0 <col:14, col:21> '_Bool' <IntegralToBoolean>
|   |     |   | `-BinaryOperator 0x5642e75f5fa8 <col:14, col:21> 'int' '<'
|   |     |   |   |-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |   |   `-IntegerLiteral 0x5642e75f0d98 <col:21> 'int' 10
|   |     |   |-BinaryOperator 0x5642e75f6690 <col:10> 'int' '<='
|   |     |   | |-ImplicitCastExpr 0x5642e75f6660 <col:10> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x5642e75f65f8 <col:10> 'int' lvalue Var 0x5642e75f6598 '.omp.iv' 'int'
|   |     |   | `-ImplicitCastExpr 0x5642e75f6678 <col:10> 'int' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5642e75f6328 <col:10> 'int' lvalue Var 0x5642e75f62c8 '.omp.ub' 'int'
|   |     |   |-BinaryOperator 0x5642e75f6638 <col:10> 'int' '='
|   |     |   | |-DeclRefExpr 0x5642e75f65f8 <col:10> 'int' lvalue Var 0x5642e75f6598 '.omp.iv' 'int'
|   |     |   | `-ImplicitCastExpr 0x5642e75f6620 <col:10> 'int' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5642e75f6268 <col:10> 'int' lvalue Var 0x5642e75f6208 '.omp.lb' 'int'
|   |     |   |-BinaryOperator 0x5642e75f6718 <col:10, <invalid sloc>> 'int' '='
|   |     |   | |-DeclRefExpr 0x5642e75f65f8 <col:10> 'int' lvalue Var 0x5642e75f6598 '.omp.iv' 'int'
|   |     |   | `-BinaryOperator 0x5642e75f66f0 <col:10, <invalid sloc>> 'int' '+'
|   |     |   |   |-ImplicitCastExpr 0x5642e75f66d8 <col:10> 'int' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x5642e75f65f8 <col:10> 'int' lvalue Var 0x5642e75f6598 '.omp.iv' 'int'
|   |     |   |   `-IntegerLiteral 0x5642e75f66b8 <<invalid sloc>> 'int' 1
|   |     |   |-<<<NULL>>>
|   |     |   |-DeclRefExpr 0x5642e75f63c8 <col:10> 'int' lvalue Var 0x5642e75f6368 '.omp.is_last' 'int'
|   |     |   |-DeclRefExpr 0x5642e75f6268 <col:10> 'int' lvalue Var 0x5642e75f6208 '.omp.lb' 'int'
|   |     |   |-DeclRefExpr 0x5642e75f6328 <col:10> 'int' lvalue Var 0x5642e75f62c8 '.omp.ub' 'int'
|   |     |   |-DeclRefExpr 0x5642e75f6488 <col:10> 'int' lvalue Var 0x5642e75f6428 '.omp.stride' 'int'
|   |     |   |-BinaryOperator 0x5642e75f6558 <col:10> 'int' '='
|   |     |   | |-DeclRefExpr 0x5642e75f6328 <col:10> 'int' lvalue Var 0x5642e75f62c8 '.omp.ub' 'int'
|   |     |   | `-ConditionalOperator 0x5642e75f6528 <col:10> 'int'
|   |     |   |   |-BinaryOperator 0x5642e75f64e8 <col:10, <invalid sloc>> 'int' '>'
|   |     |   |   | |-ImplicitCastExpr 0x5642e75f64d0 <col:10> 'int' <LValueToRValue>
|   |     |   |   | | `-DeclRefExpr 0x5642e75f6328 <col:10> 'int' lvalue Var 0x5642e75f62c8 '.omp.ub' 'int'
|   |     |   |   | `-BinaryOperator 0x5642e75f61c8 <col:5, <invalid sloc>> 'int' '-'
|   |     |   |   |   |-BinaryOperator 0x5642e75f60a0 <col:5, col:25> 'int' '/'
|   |     |   |   |   | |-ParenExpr 0x5642e75f6080 <col:5> 'int'
|   |     |   |   |   | | `-BinaryOperator 0x5642e75f6058 <col:21, col:25> 'int' '+'
|   |     |   |   |   | |   |-BinaryOperator 0x5642e75f6030 <col:21, <invalid sloc>> 'int' '-'
|   |     |   |   |   | |   | |-BinaryOperator 0x5642e75f5fe8 <col:21, col:14> 'int' '-'
|   |     |   |   |   | |   | | |-IntegerLiteral 0x5642e75f0d98 <col:21> 'int' 10
|   |     |   |   |   | |   | | `-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |   |   |   | |   | `-IntegerLiteral 0x5642e75f6010 <<invalid sloc>> 'int' 1
|   |     |   |   |   | |   `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   |   |   | `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   |   |   `-IntegerLiteral 0x5642e75f61a8 <<invalid sloc>> 'int' 1
|   |     |   |   |-BinaryOperator 0x5642e75f61c8 <col:5, <invalid sloc>> 'int' '-'
|   |     |   |   | |-BinaryOperator 0x5642e75f60a0 <col:5, col:25> 'int' '/'
|   |     |   |   | | |-ParenExpr 0x5642e75f6080 <col:5> 'int'
|   |     |   |   | | | `-BinaryOperator 0x5642e75f6058 <col:21, col:25> 'int' '+'
|   |     |   |   | | |   |-BinaryOperator 0x5642e75f6030 <col:21, <invalid sloc>> 'int' '-'
|   |     |   |   | | |   | |-BinaryOperator 0x5642e75f5fe8 <col:21, col:14> 'int' '-'
|   |     |   |   | | |   | | |-IntegerLiteral 0x5642e75f0d98 <col:21> 'int' 10
|   |     |   |   | | |   | | `-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |   |   | | |   | `-IntegerLiteral 0x5642e75f6010 <<invalid sloc>> 'int' 1
|   |     |   |   | | |   `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   |   | | `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   |   | `-IntegerLiteral 0x5642e75f61a8 <<invalid sloc>> 'int' 1
|   |     |   |   `-ImplicitCastExpr 0x5642e75f6510 <col:10> 'int' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x5642e75f6328 <col:10> 'int' lvalue Var 0x5642e75f62c8 '.omp.ub' 'int'
|   |     |   |-BinaryOperator 0x5642e75f6798 <col:10> 'int' '='
|   |     |   | |-DeclRefExpr 0x5642e75f6268 <col:10> 'int' lvalue Var 0x5642e75f6208 '.omp.lb' 'int'
|   |     |   | `-BinaryOperator 0x5642e75f6770 <col:10> 'int' '+'
|   |     |   |   |-ImplicitCastExpr 0x5642e75f6740 <col:10> 'int' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x5642e75f6268 <col:10> 'int' lvalue Var 0x5642e75f6208 '.omp.lb' 'int'
|   |     |   |   `-ImplicitCastExpr 0x5642e75f6758 <col:10> 'int' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x5642e75f6488 <col:10> 'int' lvalue Var 0x5642e75f6428 '.omp.stride' 'int'
|   |     |   |-BinaryOperator 0x5642e75f6818 <col:10> 'int' '='
|   |     |   | |-DeclRefExpr 0x5642e75f6328 <col:10> 'int' lvalue Var 0x5642e75f62c8 '.omp.ub' 'int'
|   |     |   | `-BinaryOperator 0x5642e75f67f0 <col:10> 'int' '+'
|   |     |   |   |-ImplicitCastExpr 0x5642e75f67c0 <col:10> 'int' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x5642e75f6328 <col:10> 'int' lvalue Var 0x5642e75f62c8 '.omp.ub' 'int'
|   |     |   |   `-ImplicitCastExpr 0x5642e75f67d8 <col:10> 'int' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x5642e75f6488 <col:10> 'int' lvalue Var 0x5642e75f6428 '.omp.stride' 'int'
|   |     |   |-BinaryOperator 0x5642e75f60a0 <col:5, col:25> 'int' '/'
|   |     |   | |-ParenExpr 0x5642e75f6080 <col:5> 'int'
|   |     |   | | `-BinaryOperator 0x5642e75f6058 <col:21, col:25> 'int' '+'
|   |     |   | |   |-BinaryOperator 0x5642e75f6030 <col:21, <invalid sloc>> 'int' '-'
|   |     |   | |   | |-BinaryOperator 0x5642e75f5fe8 <col:21, col:14> 'int' '-'
|   |     |   | |   | | |-IntegerLiteral 0x5642e75f0d98 <col:21> 'int' 10
|   |     |   | |   | | `-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |   | |   | `-IntegerLiteral 0x5642e75f6010 <<invalid sloc>> 'int' 1
|   |     |   | |   `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   | `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   |-DeclRefExpr 0x5642e75f60c8 <col:5> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   |-DeclRefExpr 0x5642e75f6168 <col:5> 'int' lvalue Var 0x5642e75f6108 'i' 'int'
|   |     |   |-BinaryOperator 0x5642e75f6868 <col:5, col:14> 'int' '='
|   |     |   | |-DeclRefExpr 0x5642e75f6840 <col:5> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | `-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |   |-BinaryOperator 0x5642e75f6918 <col:5, col:25> 'int' '='
|   |     |   | |-DeclRefExpr 0x5642e75f6840 <col:5> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |   | `-BinaryOperator 0x5642e75f68f0 <col:14, col:25> 'int' '+'
|   |     |   |   |-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |   |   `-BinaryOperator 0x5642e75f68c8 <col:25> 'int' '*'
|   |     |   |     |-ImplicitCastExpr 0x5642e75f68b0 <col:25> 'int' <LValueToRValue>
|   |     |   |     | `-ParenExpr 0x5642e75f6890 <col:25> 'int' lvalue
|   |     |   |     |   `-DeclRefExpr 0x5642e75f65f8 <col:10> 'int' lvalue Var 0x5642e75f6598 '.omp.iv' 'int'
|   |     |   |     `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |   `-BinaryOperator 0x5642e75f69b0 <col:5, col:25> 'int' '='
|   |     |     |-DeclRefExpr 0x5642e75f6840 <col:5> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |     |     `-BinaryOperator 0x5642e75f6988 <col:14, col:25> 'int' '+'
|   |     |       |-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |       `-BinaryOperator 0x5642e75f6960 <col:25> 'int' '*'
|   |     |         |-ParenExpr 0x5642e75f6940 <col:25> 'int'
|   |     |         | `-BinaryOperator 0x5642e75f60a0 <col:5, col:25> 'int' '/'
|   |     |         |   |-ParenExpr 0x5642e75f6080 <col:5> 'int'
|   |     |         |   | `-BinaryOperator 0x5642e75f6058 <col:21, col:25> 'int' '+'
|   |     |         |   |   |-BinaryOperator 0x5642e75f6030 <col:21, <invalid sloc>> 'int' '-'
|   |     |         |   |   | |-BinaryOperator 0x5642e75f5fe8 <col:21, col:14> 'int' '-'
|   |     |         |   |   | | |-IntegerLiteral 0x5642e75f0d98 <col:21> 'int' 10
|   |     |         |   |   | | `-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |     |         |   |   | `-IntegerLiteral 0x5642e75f6010 <<invalid sloc>> 'int' 1
|   |     |         |   |   `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |         |   `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |         `-IntegerLiteral 0x5642e75f5f88 <col:25> 'int' 1
|   |     |-ImplicitParamDecl 0x5642e75f08e0 <line:17:11> col:11 implicit .global_tid. 'int *const restrict'
|   |     |-ImplicitParamDecl 0x5642e75f0940 <col:11> col:11 implicit .bound_tid. 'int *const restrict'
|   |     |-ImplicitParamDecl 0x5642e75f09c8 <col:11> col:11 implicit __context 'struct (anonymous at lab2_openmp_-_main.c:17:11) *'
|   |     |-RecordDecl 0x5642e75f0a70 <line:19:13> col:13 implicit struct definition
|   |     | |-CapturedRecordAttr 0x5642e75f0b20 <<invalid sloc>> Implicit
|   |     | |-FieldDecl 0x5642e75f0cb8 <line:20:10> col:10 implicit 'int &'
|   |     | |-FieldDecl 0x5642e75f0e80 <line:22:7> col:7 implicit 'int &'
|   |     | `-FieldDecl 0x5642e75f3cf0 <line:28:9> col:9 implicit 'int &'
|   |     `-CapturedDecl 0x5642e75f0b68 <<invalid sloc>> <invalid sloc>
|   |       |-ForStmt 0x5642e75f5ee8 <line:20:5, line:51:5>
|   |       | |-BinaryOperator 0x5642e75f0d48 <line:20:10, col:14> 'int' '='
|   |       | | |-DeclRefExpr 0x5642e75f0c78 <col:10> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       | | `-IntegerLiteral 0x5642e75f0d28 <col:14> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x5642e75f0dd0 <col:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x5642e75f0db8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x5642e75f0d70 <col:17> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       | | `-IntegerLiteral 0x5642e75f0d98 <col:21> 'int' 10
|   |       | |-UnaryOperator 0x5642e75f0e20 <col:25, col:26> 'int' postfix '++'
|   |       | | `-DeclRefExpr 0x5642e75f0df8 <col:25> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       | `-CompoundStmt 0x5642e75f5ea0 <line:21:5, line:51:5>
|   |       |   |-BinaryOperator 0x5642e75f1030 <line:22:7, col:32> 'int' '='
|   |       |   | |-DeclRefExpr 0x5642e75f0e40 <col:7> 'int' lvalue Var 0x5642e75ef7b8 'tid' 'int'
|   |       |   | `-CallExpr 0x5642e75f1008 <col:13, col:32> 'int'
|   |       |   |   `-ImplicitCastExpr 0x5642e75f0ff0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       |   |     `-DeclRefExpr 0x5642e75f0fc8 <col:13> 'int ()' Function 0x5642e75f0f18 'omp_get_thread_num' 'int ()'
|   |       |   |-IfStmt 0x5642e75f1780 <line:23:7, line:24:38>
|   |       |   | |-<<<NULL>>>
|   |       |   | |-<<<NULL>>>
|   |       |   | |-UnaryOperator 0x5642e75f1078 <line:23:11, col:12> 'int' prefix '!'
|   |       |   | | `-IntegerLiteral 0x5642e75f1058 <col:12> 'int' 1
|   |       |   | |-CallExpr 0x5642e75f1700 <line:24:9, col:38> 'int'
|   |       |   | | |-ImplicitCastExpr 0x5642e75f16e8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       |   | | | `-DeclRefExpr 0x5642e75f15f0 <col:9> 'int (const char *, ...)' Function 0x5642e75f1490 'printf' 'int (const char *, ...)'
|   |       |   | | |-ImplicitCastExpr 0x5642e75f1750 <col:16> 'const char *' <BitCast>
|   |       |   | | | `-ImplicitCastExpr 0x5642e75f1738 <col:16> 'char *' <ArrayToPointerDecay>
|   |       |   | | |   `-StringLiteral 0x5642e75f1658 <col:16> 'char [15]' lvalue "Thread ID: %d\n"
|   |       |   | | `-ImplicitCastExpr 0x5642e75f1768 <col:35> 'int' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x5642e75f1690 <col:35> 'int' lvalue Var 0x5642e75ef7b8 'tid' 'int'
|   |       |   | `-<<<NULL>>>
|   |       |   |-IfStmt 0x5642e75f40c0 <line:26:7, line:32:7>
|   |       |   | |-<<<NULL>>>
|   |       |   | |-<<<NULL>>>
|   |       |   | |-BinaryOperator 0x5642e75f3c88 <line:26:11, col:18> 'int' '=='
|   |       |   | | |-ImplicitCastExpr 0x5642e75f3c70 <col:11> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x5642e75f17b8 <col:11> 'int' lvalue Var 0x5642e75ef7b8 'tid' 'int'
|   |       |   | | `-IntegerLiteral 0x5642e75f17e0 <col:18> 'int' 0
|   |       |   | |-CompoundStmt 0x5642e75f40a0 <line:27:7, line:32:7>
|   |       |   | | |-BinaryOperator 0x5642e75f3ea0 <line:28:9, col:40> 'int' '='
|   |       |   | | | |-DeclRefExpr 0x5642e75f3cb0 <col:9> 'int' lvalue Var 0x5642e75ef848 'nthreads' 'int'
|   |       |   | | | `-CallExpr 0x5642e75f3e78 <col:20, col:40> 'int'
|   |       |   | | |   `-ImplicitCastExpr 0x5642e75f3e60 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | | |     `-DeclRefExpr 0x5642e75f3e38 <col:20> 'int ()' Function 0x5642e75f3d88 'omp_get_num_threads' 'int ()'
|   |       |   | | `-IfStmt 0x5642e75f4068 <line:29:9, line:30:54>
|   |       |   | |   |-<<<NULL>>>
|   |       |   | |   |-<<<NULL>>>
|   |       |   | |   |-UnaryOperator 0x5642e75f3ee8 <line:29:13, col:14> 'int' prefix '!'
|   |       |   | |   | `-IntegerLiteral 0x5642e75f3ec8 <col:14> 'int' 1
|   |       |   | |   |-CallExpr 0x5642e75f3fe8 <line:30:11, col:54> 'int'
|   |       |   | |   | |-ImplicitCastExpr 0x5642e75f3fd0 <col:11> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       |   | |   | | `-DeclRefExpr 0x5642e75f3f08 <col:11> 'int (const char *, ...)' Function 0x5642e75f1490 'printf' 'int (const char *, ...)'
|   |       |   | |   | |-ImplicitCastExpr 0x5642e75f4038 <col:18> 'const char *' <BitCast>
|   |       |   | |   | | `-ImplicitCastExpr 0x5642e75f4020 <col:18> 'char *' <ArrayToPointerDecay>
|   |       |   | |   | |   `-StringLiteral 0x5642e75f3f68 <col:18> 'char [24]' lvalue "Number of threads = %d\n"
|   |       |   | |   | `-ImplicitCastExpr 0x5642e75f4050 <col:46> 'int' <LValueToRValue>
|   |       |   | |   |   `-DeclRefExpr 0x5642e75f3fa8 <col:46> 'int' lvalue Var 0x5642e75ef848 'nthreads' 'int'
|   |       |   | |   `-<<<NULL>>>
|   |       |   | `-<<<NULL>>>
|   |       |   |-BinaryOperator 0x5642e75f4328 <line:34:7, col:29> 'int' '='
|   |       |   | |-ArraySubscriptExpr 0x5642e75f4178 <col:7, col:16> 'int' lvalue
|   |       |   | | |-ImplicitCastExpr 0x5642e75f4148 <col:7> 'int *' <ArrayToPointerDecay>
|   |       |   | | | `-DeclRefExpr 0x5642e75f40f8 <col:7> 'int [10]' lvalue Var 0x5642e75eee30 'array_a' 'int [10]'
|   |       |   | | `-ImplicitCastExpr 0x5642e75f4160 <col:15> 'int' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x5642e75f4120 <col:15> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |   | `-BinaryOperator 0x5642e75f4300 <col:20, col:29> 'int' '%'
|   |       |   |   |-CallExpr 0x5642e75f42b8 <col:20, col:25> 'int'
|   |       |   |   | `-ImplicitCastExpr 0x5642e75f42a0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |       |   |   |   `-DeclRefExpr 0x5642e75f4278 <col:20> 'int ()' Function 0x5642e75f41c8 'rand' 'int ()'
|   |       |   |   `-IntegerLiteral 0x5642e75f42e0 <col:29> 'int' 10
|   |       |   |-BinaryOperator 0x5642e75f44a8 <line:35:7, col:29> 'int' '='
|   |       |   | |-ArraySubscriptExpr 0x5642e75f43d0 <col:7, col:16> 'int' lvalue
|   |       |   | | |-ImplicitCastExpr 0x5642e75f43a0 <col:7> 'int *' <ArrayToPointerDecay>
|   |       |   | | | `-DeclRefExpr 0x5642e75f4350 <col:7> 'int [10]' lvalue Var 0x5642e75eef18 'array_b' 'int [10]'
|   |       |   | | `-ImplicitCastExpr 0x5642e75f43b8 <col:15> 'int' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x5642e75f4378 <col:15> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |   | `-BinaryOperator 0x5642e75f4480 <col:20, col:29> 'int' '%'
|   |       |   |   |-CallExpr 0x5642e75f4438 <col:20, col:25> 'int'
|   |       |   |   | `-ImplicitCastExpr 0x5642e75f4420 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |       |   |   |   `-DeclRefExpr 0x5642e75f43f8 <col:20> 'int ()' Function 0x5642e75f41c8 'rand' 'int ()'
|   |       |   |   `-IntegerLiteral 0x5642e75f4460 <col:29> 'int' 10
|   |       |   |-BinaryOperator 0x5642e75f4788 <line:36:7, col:48> 'int' '='
|   |       |   | |-ArraySubscriptExpr 0x5642e75f4550 <col:7, col:16> 'int' lvalue
|   |       |   | | |-ImplicitCastExpr 0x5642e75f4520 <col:7> 'int *' <ArrayToPointerDecay>
|   |       |   | | | `-DeclRefExpr 0x5642e75f44d0 <col:7> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |       |   | | `-ImplicitCastExpr 0x5642e75f4538 <col:15> 'int' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x5642e75f44f8 <col:15> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |   | `-BinaryOperator 0x5642e75f4760 <col:20, col:48> 'int' '/'
|   |       |   |   |-ParenExpr 0x5642e75f4720 <col:20, col:44> 'int'
|   |       |   |   | `-BinaryOperator 0x5642e75f46f8 <col:21, col:43> 'int' '+'
|   |       |   |   |   |-ImplicitCastExpr 0x5642e75f46c8 <col:21, col:30> 'int' <LValueToRValue>
|   |       |   |   |   | `-ArraySubscriptExpr 0x5642e75f45f8 <col:21, col:30> 'int' lvalue
|   |       |   |   |   |   |-ImplicitCastExpr 0x5642e75f45c8 <col:21> 'int *' <ArrayToPointerDecay>
|   |       |   |   |   |   | `-DeclRefExpr 0x5642e75f4578 <col:21> 'int [10]' lvalue Var 0x5642e75eee30 'array_a' 'int [10]'
|   |       |   |   |   |   `-ImplicitCastExpr 0x5642e75f45e0 <col:29> 'int' <LValueToRValue>
|   |       |   |   |   |     `-DeclRefExpr 0x5642e75f45a0 <col:29> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |   |   |   `-ImplicitCastExpr 0x5642e75f46e0 <col:34, col:43> 'int' <LValueToRValue>
|   |       |   |   |     `-ArraySubscriptExpr 0x5642e75f46a0 <col:34, col:43> 'int' lvalue
|   |       |   |   |       |-ImplicitCastExpr 0x5642e75f4670 <col:34> 'int *' <ArrayToPointerDecay>
|   |       |   |   |       | `-DeclRefExpr 0x5642e75f4620 <col:34> 'int [10]' lvalue Var 0x5642e75eef18 'array_b' 'int [10]'
|   |       |   |   |       `-ImplicitCastExpr 0x5642e75f4688 <col:42> 'int' <LValueToRValue>
|   |       |   |   |         `-DeclRefExpr 0x5642e75f4648 <col:42> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |   |   `-IntegerLiteral 0x5642e75f4740 <col:48> 'int' 2
|   |       |   `-OMPCriticalDirective 0x5642e75f5e60 <line:37:15, col:27>
|   |       |     `-CapturedStmt 0x5642e75f5e28 <line:38:7, line:50:7>
|   |       |       |-CapturedDecl 0x5642e75f48a8 <<invalid sloc>> <invalid sloc>
|   |       |       | |-CompoundStmt 0x5642e75f5e00 <line:38:7, line:50:7>
|   |       |       | | |-IfStmt 0x5642e75f5a20 <line:39:9, line:42:9>
|   |       |       | | | |-<<<NULL>>>
|   |       |       | | | |-<<<NULL>>>
|   |       |       | | | |-BinaryOperator 0x5642e75f4b10 <line:39:13, col:26> 'int' '<'
|   |       |       | | | | |-ImplicitCastExpr 0x5642e75f4ae0 <col:13, col:22> 'int' <LValueToRValue>
|   |       |       | | | | | `-ArraySubscriptExpr 0x5642e75f4a90 <col:13, col:22> 'int' lvalue
|   |       |       | | | | |   |-ImplicitCastExpr 0x5642e75f4a60 <col:13> 'int *' <ArrayToPointerDecay>
|   |       |       | | | | |   | `-DeclRefExpr 0x5642e75f4988 <col:13> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |       |       | | | | |   `-ImplicitCastExpr 0x5642e75f4a78 <col:21> 'int' <LValueToRValue>
|   |       |       | | | | |     `-DeclRefExpr 0x5642e75f49b0 <col:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |       | | | | `-ImplicitCastExpr 0x5642e75f4af8 <col:26> 'int' <LValueToRValue>
|   |       |       | | | |   `-DeclRefExpr 0x5642e75f4ab8 <col:26> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   |       |       | | | |-CompoundStmt 0x5642e75f4c48 <line:40:9, line:42:9>
|   |       |       | | | | `-BinaryOperator 0x5642e75f4c20 <line:41:11, col:37> 'int' '='
|   |       |       | | | |   |-DeclRefExpr 0x5642e75f4b38 <col:11> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   |       |       | | | |   `-ImplicitCastExpr 0x5642e75f4c08 <col:28, col:37> 'int' <LValueToRValue>
|   |       |       | | | |     `-ArraySubscriptExpr 0x5642e75f4be0 <col:28, col:37> 'int' lvalue
|   |       |       | | | |       |-ImplicitCastExpr 0x5642e75f4bb0 <col:28> 'int *' <ArrayToPointerDecay>
|   |       |       | | | |       | `-DeclRefExpr 0x5642e75f4b60 <col:28> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |       |       | | | |       `-ImplicitCastExpr 0x5642e75f4bc8 <col:36> 'int' <LValueToRValue>
|   |       |       | | | |         `-DeclRefExpr 0x5642e75f4b88 <col:36> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |       | | | `-<<<NULL>>>
|   |       |       | | |-IfStmt 0x5642e75f5ca8 <line:44:9, line:47:9>
|   |       |       | | | |-<<<NULL>>>
|   |       |       | | | |-<<<NULL>>>
|   |       |       | | | |-BinaryOperator 0x5642e75f5b58 <line:44:13, col:26> 'int' '>'
|   |       |       | | | | |-ImplicitCastExpr 0x5642e75f5b28 <col:13, col:22> 'int' <LValueToRValue>
|   |       |       | | | | | `-ArraySubscriptExpr 0x5642e75f5ad8 <col:13, col:22> 'int' lvalue
|   |       |       | | | | |   |-ImplicitCastExpr 0x5642e75f5aa8 <col:13> 'int *' <ArrayToPointerDecay>
|   |       |       | | | | |   | `-DeclRefExpr 0x5642e75f5a58 <col:13> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |       |       | | | | |   `-ImplicitCastExpr 0x5642e75f5ac0 <col:21> 'int' <LValueToRValue>
|   |       |       | | | | |     `-DeclRefExpr 0x5642e75f5a80 <col:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |       | | | | `-ImplicitCastExpr 0x5642e75f5b40 <col:26> 'int' <LValueToRValue>
|   |       |       | | | |   `-DeclRefExpr 0x5642e75f5b00 <col:26> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   |       |       | | | |-CompoundStmt 0x5642e75f5c90 <line:45:9, line:47:9>
|   |       |       | | | | `-BinaryOperator 0x5642e75f5c68 <line:46:11, col:36> 'int' '='
|   |       |       | | | |   |-DeclRefExpr 0x5642e75f5b80 <col:11> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   |       |       | | | |   `-ImplicitCastExpr 0x5642e75f5c50 <col:27, col:36> 'int' <LValueToRValue>
|   |       |       | | | |     `-ArraySubscriptExpr 0x5642e75f5c28 <col:27, col:36> 'int' lvalue
|   |       |       | | | |       |-ImplicitCastExpr 0x5642e75f5bf8 <col:27> 'int *' <ArrayToPointerDecay>
|   |       |       | | | |       | `-DeclRefExpr 0x5642e75f5ba8 <col:27> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |       |       | | | |       `-ImplicitCastExpr 0x5642e75f5c10 <col:35> 'int' <LValueToRValue>
|   |       |       | | | |         `-DeclRefExpr 0x5642e75f5bd0 <col:35> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |       | | | `-<<<NULL>>>
|   |       |       | | `-CompoundAssignOperator 0x5642e75f5dc8 <line:49:9, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |       | |   |-DeclRefExpr 0x5642e75f5ce0 <col:9> 'int' lvalue Var 0x5642e75ef128 'average_value' 'int'
|   |       |       | |   `-ImplicitCastExpr 0x5642e75f5db0 <col:26, col:35> 'int' <LValueToRValue>
|   |       |       | |     `-ArraySubscriptExpr 0x5642e75f5d88 <col:26, col:35> 'int' lvalue
|   |       |       | |       |-ImplicitCastExpr 0x5642e75f5d58 <col:26> 'int *' <ArrayToPointerDecay>
|   |       |       | |       | `-DeclRefExpr 0x5642e75f5d08 <col:26> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |       |       | |       `-ImplicitCastExpr 0x5642e75f5d70 <col:34> 'int' <LValueToRValue>
|   |       |       | |         `-DeclRefExpr 0x5642e75f5d30 <col:34> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |       | `-ImplicitParamDecl 0x5642e75f4928 <line:37:15> col:15 implicit __context 'struct (anonymous at lab2_openmp_-_main.c:37:15) *'
|   |       |       `-DeclRefExpr 0x5642e75f4a38 <line:39:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |       |-ImplicitParamDecl 0x5642e75f0be8 <line:19:13> col:13 implicit __context 'struct (anonymous at lab2_openmp_-_main.c:19:13) *'
|   |       |-FunctionDecl 0x5642e75f0f18 parent 0x5642e7594e18 <<invalid sloc>> line:22:13 implicit used omp_get_thread_num 'int ()'
|   |       |-FunctionDecl 0x5642e75f3d88 parent 0x5642e7594e18 <<invalid sloc>> line:28:20 implicit used omp_get_num_threads 'int ()'
|   |       |-FunctionDecl 0x5642e75f41c8 parent 0x5642e7594e18 <<invalid sloc>> line:34:20 implicit used rand 'int ()'
|   |       |-RecordDecl 0x5642e75f47b0 <line:37:15> col:15 implicit struct definition
|   |       | |-CapturedRecordAttr 0x5642e75f4860 <<invalid sloc>> Implicit
|   |       | `-FieldDecl 0x5642e75f49f0 <line:39:21> col:21 implicit 'int &'
|   |       `-CapturedDecl 0x5642e75f48a8 <<invalid sloc>> <invalid sloc>
|   |         |-CompoundStmt 0x5642e75f5e00 <line:38:7, line:50:7>
|   |         | |-IfStmt 0x5642e75f5a20 <line:39:9, line:42:9>
|   |         | | |-<<<NULL>>>
|   |         | | |-<<<NULL>>>
|   |         | | |-BinaryOperator 0x5642e75f4b10 <line:39:13, col:26> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x5642e75f4ae0 <col:13, col:22> 'int' <LValueToRValue>
|   |         | | | | `-ArraySubscriptExpr 0x5642e75f4a90 <col:13, col:22> 'int' lvalue
|   |         | | | |   |-ImplicitCastExpr 0x5642e75f4a60 <col:13> 'int *' <ArrayToPointerDecay>
|   |         | | | |   | `-DeclRefExpr 0x5642e75f4988 <col:13> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |         | | | |   `-ImplicitCastExpr 0x5642e75f4a78 <col:21> 'int' <LValueToRValue>
|   |         | | | |     `-DeclRefExpr 0x5642e75f49b0 <col:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |         | | | `-ImplicitCastExpr 0x5642e75f4af8 <col:26> 'int' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5642e75f4ab8 <col:26> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   |         | | |-CompoundStmt 0x5642e75f4c48 <line:40:9, line:42:9>
|   |         | | | `-BinaryOperator 0x5642e75f4c20 <line:41:11, col:37> 'int' '='
|   |         | | |   |-DeclRefExpr 0x5642e75f4b38 <col:11> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   |         | | |   `-ImplicitCastExpr 0x5642e75f4c08 <col:28, col:37> 'int' <LValueToRValue>
|   |         | | |     `-ArraySubscriptExpr 0x5642e75f4be0 <col:28, col:37> 'int' lvalue
|   |         | | |       |-ImplicitCastExpr 0x5642e75f4bb0 <col:28> 'int *' <ArrayToPointerDecay>
|   |         | | |       | `-DeclRefExpr 0x5642e75f4b60 <col:28> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |         | | |       `-ImplicitCastExpr 0x5642e75f4bc8 <col:36> 'int' <LValueToRValue>
|   |         | | |         `-DeclRefExpr 0x5642e75f4b88 <col:36> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |         | | `-<<<NULL>>>
|   |         | |-IfStmt 0x5642e75f5ca8 <line:44:9, line:47:9>
|   |         | | |-<<<NULL>>>
|   |         | | |-<<<NULL>>>
|   |         | | |-BinaryOperator 0x5642e75f5b58 <line:44:13, col:26> 'int' '>'
|   |         | | | |-ImplicitCastExpr 0x5642e75f5b28 <col:13, col:22> 'int' <LValueToRValue>
|   |         | | | | `-ArraySubscriptExpr 0x5642e75f5ad8 <col:13, col:22> 'int' lvalue
|   |         | | | |   |-ImplicitCastExpr 0x5642e75f5aa8 <col:13> 'int *' <ArrayToPointerDecay>
|   |         | | | |   | `-DeclRefExpr 0x5642e75f5a58 <col:13> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |         | | | |   `-ImplicitCastExpr 0x5642e75f5ac0 <col:21> 'int' <LValueToRValue>
|   |         | | | |     `-DeclRefExpr 0x5642e75f5a80 <col:21> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |         | | | `-ImplicitCastExpr 0x5642e75f5b40 <col:26> 'int' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5642e75f5b00 <col:26> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   |         | | |-CompoundStmt 0x5642e75f5c90 <line:45:9, line:47:9>
|   |         | | | `-BinaryOperator 0x5642e75f5c68 <line:46:11, col:36> 'int' '='
|   |         | | |   |-DeclRefExpr 0x5642e75f5b80 <col:11> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   |         | | |   `-ImplicitCastExpr 0x5642e75f5c50 <col:27, col:36> 'int' <LValueToRValue>
|   |         | | |     `-ArraySubscriptExpr 0x5642e75f5c28 <col:27, col:36> 'int' lvalue
|   |         | | |       |-ImplicitCastExpr 0x5642e75f5bf8 <col:27> 'int *' <ArrayToPointerDecay>
|   |         | | |       | `-DeclRefExpr 0x5642e75f5ba8 <col:27> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |         | | |       `-ImplicitCastExpr 0x5642e75f5c10 <col:35> 'int' <LValueToRValue>
|   |         | | |         `-DeclRefExpr 0x5642e75f5bd0 <col:35> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |         | | `-<<<NULL>>>
|   |         | `-CompoundAssignOperator 0x5642e75f5dc8 <line:49:9, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |   |-DeclRefExpr 0x5642e75f5ce0 <col:9> 'int' lvalue Var 0x5642e75ef128 'average_value' 'int'
|   |         |   `-ImplicitCastExpr 0x5642e75f5db0 <col:26, col:35> 'int' <LValueToRValue>
|   |         |     `-ArraySubscriptExpr 0x5642e75f5d88 <col:26, col:35> 'int' lvalue
|   |         |       |-ImplicitCastExpr 0x5642e75f5d58 <col:26> 'int *' <ArrayToPointerDecay>
|   |         |       | `-DeclRefExpr 0x5642e75f5d08 <col:26> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   |         |       `-ImplicitCastExpr 0x5642e75f5d70 <col:34> 'int' <LValueToRValue>
|   |         |         `-DeclRefExpr 0x5642e75f5d30 <col:34> 'int' lvalue Var 0x5642e75ef728 'i' 'int'
|   |         `-ImplicitParamDecl 0x5642e75f4928 <line:37:15> col:15 implicit __context 'struct (anonymous at lab2_openmp_-_main.c:37:15) *'
|   |-CallExpr 0x5642e75f7590 <line:54:3, col:33> 'int'
|   | |-ImplicitCastExpr 0x5642e75f7578 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75f74b8 <col:3> 'int ()' Function 0x5642e75f7408 'print_array' 'int ()'
|   | |-ImplicitCastExpr 0x5642e75f75c8 <col:15> 'int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75f74e0 <col:15> 'int [10]' lvalue Var 0x5642e75eee30 'array_a' 'int [10]'
|   | `-ImplicitCastExpr 0x5642e75f75e0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x5642e75f7548 <col:24> 'char [8]' lvalue "Array A"
|   |-CallExpr 0x5642e75f7690 <line:55:3, col:33> 'int'
|   | |-ImplicitCastExpr 0x5642e75f7678 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75f75f8 <col:3> 'int ()' Function 0x5642e75f7408 'print_array' 'int ()'
|   | |-ImplicitCastExpr 0x5642e75f76c8 <col:15> 'int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75f7620 <col:15> 'int [10]' lvalue Var 0x5642e75eef18 'array_b' 'int [10]'
|   | `-ImplicitCastExpr 0x5642e75f76e0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x5642e75f7648 <col:24> 'char [8]' lvalue "Array B"
|   |-CallExpr 0x5642e75f7790 <line:56:3, col:33> 'int'
|   | |-ImplicitCastExpr 0x5642e75f7778 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75f76f8 <col:3> 'int ()' Function 0x5642e75f7408 'print_array' 'int ()'
|   | |-ImplicitCastExpr 0x5642e75f77c8 <col:15> 'int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75f7720 <col:15> 'int [10]' lvalue Var 0x5642e75eefc0 'array_c' 'int [10]'
|   | `-ImplicitCastExpr 0x5642e75f77e0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x5642e75f7748 <col:24> 'char [8]' lvalue "Array C"
|   |-CompoundAssignOperator 0x5642e75f7840 <line:57:3, col:20> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x5642e75f77f8 <col:3> 'int' lvalue Var 0x5642e75ef128 'average_value' 'int'
|   | `-IntegerLiteral 0x5642e75f7820 <col:20> 'int' 10
|   |-CallExpr 0x5642e75f79b8 <line:58:3, col:98> 'int'
|   | |-ImplicitCastExpr 0x5642e75f79a0 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5642e75f7878 <col:3> 'int (const char *, ...)' Function 0x5642e75f1490 'printf' 'int (const char *, ...)'
|   | |-ImplicitCastExpr 0x5642e75f7a18 <col:10> 'const char *' <BitCast>
|   | | `-ImplicitCastExpr 0x5642e75f7a00 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x5642e75f78d8 <col:10> 'char [40]' lvalue "Smallest: %d, Largest: %d, Average: %d\n"
|   | |-ImplicitCastExpr 0x5642e75f7a30 <col:54> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x5642e75f7928 <col:54> 'int' lvalue Var 0x5642e75ef038 'smallest_value' 'int'
|   | |-ImplicitCastExpr 0x5642e75f7a48 <col:70> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x5642e75f7950 <col:70> 'int' lvalue Var 0x5642e75ef0b0 'largest_value' 'int'
|   | `-ImplicitCastExpr 0x5642e75f7a60 <col:85> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5642e75f7978 <col:85> 'int' lvalue Var 0x5642e75ef128 'average_value' 'int'
|   `-ReturnStmt 0x5642e75f7a98 <line:59:3, col:10>
|     `-IntegerLiteral 0x5642e75f7a78 <col:10> 'int' 0
`-FunctionDecl 0x5642e75f1490 <line:24:9> col:9 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x5642e75f1530 <<invalid sloc>> <invalid sloc> 'const char *'
  `-FormatAttr 0x5642e75f1598 <col:9> Implicit printf 1 2
