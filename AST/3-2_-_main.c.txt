TranslationUnitDecl 0x55a027c0cb98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55a027c0d130 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55a027c0ce30 '__int128'
|-TypedefDecl 0x55a027c0d1a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55a027c0ce50 'unsigned __int128'
|-TypedefDecl 0x55a027c0d478 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55a027c0d280 'struct __NSConstantString_tag'
|   `-Record 0x55a027c0d1f8 '__NSConstantString_tag'
|-TypedefDecl 0x55a027c0d510 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55a027c0d4d0 'char *'
|   `-BuiltinType 0x55a027c0cc30 'char'
|-TypedefDecl 0x55a027c0d7d8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55a027c0d780 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55a027c0d5f0 'struct __va_list_tag'
|     `-Record 0x55a027c0d568 '__va_list_tag'
|-FunctionDecl 0x55a027c66860 <3-2_-_main.c:1:1, line:13:1> line:1:6 main 'void ()'
| `-CompoundStmt 0x55a027c6a020 <line:2:1, line:13:1>
|   |-DeclStmt 0x55a027c669b8 <line:3:3, col:8>
|   | `-VarDecl 0x55a027c66958 <col:3, col:7> col:7 used i 'int'
|   |-DeclStmt 0x55a027c66a48 <line:4:3, col:12>
|   | `-VarDecl 0x55a027c669e8 <col:3, col:7> col:7 used myval 'int'
|   `-OMPParallelForDirective 0x55a027c69f40 <line:5:11, col:35>
|     |-OMPOrderedClause 0x55a027c66a60 <col:28, col:35>
|     | `-<<<NULL>>>
|     |-CapturedStmt 0x55a027c694d0 <line:6:3, line:11:3>
|     | |-CapturedDecl 0x55a027c66b98 <<invalid sloc>> <invalid sloc>
|     | | |-ForStmt 0x55a027c69498 <line:6:3, line:11:3>
|     | | | |-BinaryOperator 0x55a027c66e48 <line:6:8, col:12> 'int' '='
|     | | | | |-DeclRefExpr 0x55a027c66d78 <col:8> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | | | | `-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|     | | | |-<<<NULL>>>
|     | | | |-BinaryOperator 0x55a027c66ed0 <col:15, col:20> 'int' '<='
|     | | | | |-ImplicitCastExpr 0x55a027c66eb8 <col:15> 'int' <LValueToRValue>
|     | | | | | `-DeclRefExpr 0x55a027c66e70 <col:15> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | | | | `-IntegerLiteral 0x55a027c66e98 <col:20> 'int' 10
|     | | | |-UnaryOperator 0x55a027c66f20 <col:24, col:25> 'int' postfix '++'
|     | | | | `-DeclRefExpr 0x55a027c66ef8 <col:24> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | | | `-CompoundStmt 0x55a027c69478 <line:7:3, line:11:3>
|     | | |   |-BinaryOperator 0x55a027c67078 <line:8:5, col:17> 'int' '='
|     | | |   | |-DeclRefExpr 0x55a027c66f40 <col:5> 'int' lvalue Var 0x55a027c669e8 'myval' 'int'
|     | | |   | `-BinaryOperator 0x55a027c67050 <col:13, col:17> 'int' '+'
|     | | |   |   |-ImplicitCastExpr 0x55a027c67038 <col:13> 'int' <LValueToRValue>
|     | | |   |   | `-DeclRefExpr 0x55a027c66ff0 <col:13> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | | |   |   `-IntegerLiteral 0x55a027c67018 <col:17> 'int' 2
|     | | |   `-OMPOrderedDirective 0x55a027c69450 <line:9:13, col:24>
|     | | |     `-CapturedStmt 0x55a027c69400 <line:10:5, col:31>
|     | | |       |-CapturedDecl 0x55a027c67198 <<invalid sloc>> <invalid sloc>
|     | | |       | |-CallExpr 0x55a027c69360 <col:5, col:31> 'int'
|     | | |       | | |-ImplicitCastExpr 0x55a027c69348 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | | |       | | | `-DeclRefExpr 0x55a027c677d0 <col:5> 'int (const char *, ...)' Function 0x55a027c67670 'printf' 'int (const char *, ...)'
|     | | |       | | |-ImplicitCastExpr 0x55a027c693b8 <col:12> 'const char *' <BitCast>
|     | | |       | | | `-ImplicitCastExpr 0x55a027c693a0 <col:12> 'char *' <ArrayToPointerDecay>
|     | | |       | | |   `-StringLiteral 0x55a027c67838 <col:12> 'char [7]' lvalue "%d %d\n"
|     | | |       | | |-ImplicitCastExpr 0x55a027c693d0 <col:23> 'int' <LValueToRValue>
|     | | |       | | | `-DeclRefExpr 0x55a027c691b8 <col:23> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | | |       | | `-ImplicitCastExpr 0x55a027c693e8 <col:26> 'int' <LValueToRValue>
|     | | |       | |   `-DeclRefExpr 0x55a027c69268 <col:26> 'int' lvalue Var 0x55a027c669e8 'myval' 'int'
|     | | |       | `-ImplicitParamDecl 0x55a027c67218 <line:9:13> col:13 implicit __context 'struct (anonymous at 3-2_-_main.c:9:13) *'
|     | | |       |-DeclRefExpr 0x55a027c69240 <line:10:23> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | | |       `-DeclRefExpr 0x55a027c692f0 <col:26> 'int' lvalue Var 0x55a027c669e8 'myval' 'int'
|     | | |-ImplicitParamDecl 0x55a027c66c00 <line:5:11> col:11 implicit .global_tid. 'int *const restrict'
|     | | |-ImplicitParamDecl 0x55a027c66c60 <col:11> col:11 implicit .bound_tid. 'int *const restrict'
|     | | |-ImplicitParamDecl 0x55a027c66ce8 <col:11> col:11 implicit __context 'struct (anonymous at 3-2_-_main.c:5:11) *'
|     | | |-RecordDecl 0x55a027c670a0 <line:9:13> col:13 implicit struct definition
|     | | | |-CapturedRecordAttr 0x55a027c67150 <<invalid sloc>> Implicit
|     | | | |-FieldDecl 0x55a027c691f8 <line:10:23> col:23 implicit 'int &'
|     | | | `-FieldDecl 0x55a027c692a8 <col:26> col:26 implicit 'int &'
|     | | `-CapturedDecl 0x55a027c67198 <<invalid sloc>> <invalid sloc>
|     | |   |-CallExpr 0x55a027c69360 <col:5, col:31> 'int'
|     | |   | |-ImplicitCastExpr 0x55a027c69348 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | |   | | `-DeclRefExpr 0x55a027c677d0 <col:5> 'int (const char *, ...)' Function 0x55a027c67670 'printf' 'int (const char *, ...)'
|     | |   | |-ImplicitCastExpr 0x55a027c693b8 <col:12> 'const char *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x55a027c693a0 <col:12> 'char *' <ArrayToPointerDecay>
|     | |   | |   `-StringLiteral 0x55a027c67838 <col:12> 'char [7]' lvalue "%d %d\n"
|     | |   | |-ImplicitCastExpr 0x55a027c693d0 <col:23> 'int' <LValueToRValue>
|     | |   | | `-DeclRefExpr 0x55a027c691b8 <col:23> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | |   | `-ImplicitCastExpr 0x55a027c693e8 <col:26> 'int' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x55a027c69268 <col:26> 'int' lvalue Var 0x55a027c669e8 'myval' 'int'
|     | |   `-ImplicitParamDecl 0x55a027c67218 <line:9:13> col:13 implicit __context 'struct (anonymous at 3-2_-_main.c:9:13) *'
|     | |-DeclRefExpr 0x55a027c66e00 <line:6:8> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | `-DeclRefExpr 0x55a027c66fc8 <line:8:5> 'int' lvalue Var 0x55a027c669e8 'myval' 'int'
|     |-DeclRefExpr 0x55a027c69b48 <line:6:8> 'int' lvalue Var 0x55a027c69ae8 '.omp.iv' 'int'
|     |-BinaryOperator 0x55a027c69718 <col:3, <invalid sloc>> 'int' '-'
|     | |-BinaryOperator 0x55a027c695f0 <col:3, col:24> 'int' '/'
|     | | |-ParenExpr 0x55a027c695d0 <col:3> 'int'
|     | | | `-BinaryOperator 0x55a027c695a8 <col:20, col:24> 'int' '+'
|     | | |   |-BinaryOperator 0x55a027c69580 <col:20, col:12> 'int' '-'
|     | | |   | |-IntegerLiteral 0x55a027c66e98 <col:20> 'int' 10
|     | | |   | `-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|     | | |   `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     | | `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     | `-IntegerLiteral 0x55a027c696f8 <<invalid sloc>> 'int' 1
|     |-<<<NULL>>>
|     |-ImplicitCastExpr 0x55a027c69568 <col:12, col:20> '_Bool' <IntegralToBoolean>
|     | `-BinaryOperator 0x55a027c69540 <col:12, col:20> 'int' '<='
|     |   |-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|     |   `-IntegerLiteral 0x55a027c66e98 <col:20> 'int' 10
|     |-BinaryOperator 0x55a027c69be0 <col:8> 'int' '<='
|     | |-ImplicitCastExpr 0x55a027c69bb0 <col:8> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55a027c69b48 <col:8> 'int' lvalue Var 0x55a027c69ae8 '.omp.iv' 'int'
|     | `-ImplicitCastExpr 0x55a027c69bc8 <col:8> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a027c69878 <col:8> 'int' lvalue Var 0x55a027c69818 '.omp.ub' 'int'
|     |-BinaryOperator 0x55a027c69b88 <col:8> 'int' '='
|     | |-DeclRefExpr 0x55a027c69b48 <col:8> 'int' lvalue Var 0x55a027c69ae8 '.omp.iv' 'int'
|     | `-ImplicitCastExpr 0x55a027c69b70 <col:8> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a027c697b8 <col:8> 'int' lvalue Var 0x55a027c69758 '.omp.lb' 'int'
|     |-BinaryOperator 0x55a027c69c68 <col:8, <invalid sloc>> 'int' '='
|     | |-DeclRefExpr 0x55a027c69b48 <col:8> 'int' lvalue Var 0x55a027c69ae8 '.omp.iv' 'int'
|     | `-BinaryOperator 0x55a027c69c40 <col:8, <invalid sloc>> 'int' '+'
|     |   |-ImplicitCastExpr 0x55a027c69c28 <col:8> 'int' <LValueToRValue>
|     |   | `-DeclRefExpr 0x55a027c69b48 <col:8> 'int' lvalue Var 0x55a027c69ae8 '.omp.iv' 'int'
|     |   `-IntegerLiteral 0x55a027c69c08 <<invalid sloc>> 'int' 1
|     |-<<<NULL>>>
|     |-DeclRefExpr 0x55a027c69918 <col:8> 'int' lvalue Var 0x55a027c698b8 '.omp.is_last' 'int'
|     |-DeclRefExpr 0x55a027c697b8 <col:8> 'int' lvalue Var 0x55a027c69758 '.omp.lb' 'int'
|     |-DeclRefExpr 0x55a027c69878 <col:8> 'int' lvalue Var 0x55a027c69818 '.omp.ub' 'int'
|     |-DeclRefExpr 0x55a027c699d8 <col:8> 'int' lvalue Var 0x55a027c69978 '.omp.stride' 'int'
|     |-BinaryOperator 0x55a027c69aa8 <col:8> 'int' '='
|     | |-DeclRefExpr 0x55a027c69878 <col:8> 'int' lvalue Var 0x55a027c69818 '.omp.ub' 'int'
|     | `-ConditionalOperator 0x55a027c69a78 <col:8> 'int'
|     |   |-BinaryOperator 0x55a027c69a38 <col:8, <invalid sloc>> 'int' '>'
|     |   | |-ImplicitCastExpr 0x55a027c69a20 <col:8> 'int' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x55a027c69878 <col:8> 'int' lvalue Var 0x55a027c69818 '.omp.ub' 'int'
|     |   | `-BinaryOperator 0x55a027c69718 <col:3, <invalid sloc>> 'int' '-'
|     |   |   |-BinaryOperator 0x55a027c695f0 <col:3, col:24> 'int' '/'
|     |   |   | |-ParenExpr 0x55a027c695d0 <col:3> 'int'
|     |   |   | | `-BinaryOperator 0x55a027c695a8 <col:20, col:24> 'int' '+'
|     |   |   | |   |-BinaryOperator 0x55a027c69580 <col:20, col:12> 'int' '-'
|     |   |   | |   | |-IntegerLiteral 0x55a027c66e98 <col:20> 'int' 10
|     |   |   | |   | `-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|     |   |   | |   `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     |   |   | `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     |   |   `-IntegerLiteral 0x55a027c696f8 <<invalid sloc>> 'int' 1
|     |   |-BinaryOperator 0x55a027c69718 <col:3, <invalid sloc>> 'int' '-'
|     |   | |-BinaryOperator 0x55a027c695f0 <col:3, col:24> 'int' '/'
|     |   | | |-ParenExpr 0x55a027c695d0 <col:3> 'int'
|     |   | | | `-BinaryOperator 0x55a027c695a8 <col:20, col:24> 'int' '+'
|     |   | | |   |-BinaryOperator 0x55a027c69580 <col:20, col:12> 'int' '-'
|     |   | | |   | |-IntegerLiteral 0x55a027c66e98 <col:20> 'int' 10
|     |   | | |   | `-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|     |   | | |   `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     |   | | `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     |   | `-IntegerLiteral 0x55a027c696f8 <<invalid sloc>> 'int' 1
|     |   `-ImplicitCastExpr 0x55a027c69a60 <col:8> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x55a027c69878 <col:8> 'int' lvalue Var 0x55a027c69818 '.omp.ub' 'int'
|     |-BinaryOperator 0x55a027c69ce8 <col:8> 'int' '='
|     | |-DeclRefExpr 0x55a027c697b8 <col:8> 'int' lvalue Var 0x55a027c69758 '.omp.lb' 'int'
|     | `-BinaryOperator 0x55a027c69cc0 <col:8> 'int' '+'
|     |   |-ImplicitCastExpr 0x55a027c69c90 <col:8> 'int' <LValueToRValue>
|     |   | `-DeclRefExpr 0x55a027c697b8 <col:8> 'int' lvalue Var 0x55a027c69758 '.omp.lb' 'int'
|     |   `-ImplicitCastExpr 0x55a027c69ca8 <col:8> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x55a027c699d8 <col:8> 'int' lvalue Var 0x55a027c69978 '.omp.stride' 'int'
|     |-BinaryOperator 0x55a027c69d68 <col:8> 'int' '='
|     | |-DeclRefExpr 0x55a027c69878 <col:8> 'int' lvalue Var 0x55a027c69818 '.omp.ub' 'int'
|     | `-BinaryOperator 0x55a027c69d40 <col:8> 'int' '+'
|     |   |-ImplicitCastExpr 0x55a027c69d10 <col:8> 'int' <LValueToRValue>
|     |   | `-DeclRefExpr 0x55a027c69878 <col:8> 'int' lvalue Var 0x55a027c69818 '.omp.ub' 'int'
|     |   `-ImplicitCastExpr 0x55a027c69d28 <col:8> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x55a027c699d8 <col:8> 'int' lvalue Var 0x55a027c69978 '.omp.stride' 'int'
|     |-BinaryOperator 0x55a027c695f0 <col:3, col:24> 'int' '/'
|     | |-ParenExpr 0x55a027c695d0 <col:3> 'int'
|     | | `-BinaryOperator 0x55a027c695a8 <col:20, col:24> 'int' '+'
|     | |   |-BinaryOperator 0x55a027c69580 <col:20, col:12> 'int' '-'
|     | |   | |-IntegerLiteral 0x55a027c66e98 <col:20> 'int' 10
|     | |   | `-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|     | |   `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     | `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     |-DeclRefExpr 0x55a027c69618 <col:3> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     |-DeclRefExpr 0x55a027c696b8 <col:3> 'int' lvalue Var 0x55a027c69658 'i' 'int'
|     |-BinaryOperator 0x55a027c69db8 <col:3, col:12> 'int' '='
|     | |-DeclRefExpr 0x55a027c69d90 <col:3> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | `-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|     |-BinaryOperator 0x55a027c69e68 <col:3, col:24> 'int' '='
|     | |-DeclRefExpr 0x55a027c69d90 <col:3> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|     | `-BinaryOperator 0x55a027c69e40 <col:12, col:24> 'int' '+'
|     |   |-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|     |   `-BinaryOperator 0x55a027c69e18 <col:24> 'int' '*'
|     |     |-ImplicitCastExpr 0x55a027c69e00 <col:24> 'int' <LValueToRValue>
|     |     | `-ParenExpr 0x55a027c69de0 <col:24> 'int' lvalue
|     |     |   `-DeclRefExpr 0x55a027c69b48 <col:8> 'int' lvalue Var 0x55a027c69ae8 '.omp.iv' 'int'
|     |     `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|     `-BinaryOperator 0x55a027c69f00 <col:3, col:24> 'int' '='
|       |-DeclRefExpr 0x55a027c69d90 <col:3> 'int' lvalue Var 0x55a027c66958 'i' 'int'
|       `-BinaryOperator 0x55a027c69ed8 <col:12, col:24> 'int' '+'
|         |-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|         `-BinaryOperator 0x55a027c69eb0 <col:24> 'int' '*'
|           |-ParenExpr 0x55a027c69e90 <col:24> 'int'
|           | `-BinaryOperator 0x55a027c695f0 <col:3, col:24> 'int' '/'
|           |   |-ParenExpr 0x55a027c695d0 <col:3> 'int'
|           |   | `-BinaryOperator 0x55a027c695a8 <col:20, col:24> 'int' '+'
|           |   |   |-BinaryOperator 0x55a027c69580 <col:20, col:12> 'int' '-'
|           |   |   | |-IntegerLiteral 0x55a027c66e98 <col:20> 'int' 10
|           |   |   | `-IntegerLiteral 0x55a027c66e28 <col:12> 'int' 1
|           |   |   `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|           |   `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
|           `-IntegerLiteral 0x55a027c69520 <col:24> 'int' 1
`-FunctionDecl 0x55a027c67670 <line:10:5> col:5 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x55a027c67710 <<invalid sloc>> <invalid sloc> 'const char *'
  `-FormatAttr 0x55a027c67778 <col:5> Implicit printf 1 2
